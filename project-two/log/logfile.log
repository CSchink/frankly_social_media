2021-04-17 14:34:00 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-17 14:34:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-17 14:34:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-17 14:34:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-17 14:34:00 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-04-17 14:34:00 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-17 14:34:00 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-04-17 14:34:00 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-17 14:34:00 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-17 14:34:00 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-17 14:34:00 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-17 14:34:00 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@27f98d67
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@27f98d67
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27f98d67
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6705de13
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@56cb884a
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@369be0b3
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6142dea8
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6142dea8
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6142dea8
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5eb0f505
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5eb0f505
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5eb0f505
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@418c67f0
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@418c67f0
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@418c67f0
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@5b20f9fa
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@5b20f9fa
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b20f9fa
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@54da33a8
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@54da33a8
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54da33a8
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6811a286
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6811a286
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6811a286
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@51f5c371
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@51f5c371
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51f5c371
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a53259b
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a53259b
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d3026b9
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d3026b9
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@6d5832db
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6d5832db
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@319d7873
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3781f959
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@7b3818f6
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b3818f6
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@5910d02e
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5910d02e
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@2a8a3c10
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2a8a3c10
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d2d23e
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d2d23e
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d0e3120
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d0e3120
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@12ad11af
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@12ad11af
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@640cbd7d
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@640cbd7d
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24bdb303
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24bdb303
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5901612e
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5901612e
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@fc53642
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@fc53642
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@5a08b2a
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a08b2a
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@432bfbb5
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@432bfbb5
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@432bfbb5
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65d3e9be
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@d769b48
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@d769b48
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@d769b48
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@25204ec9
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@75f40ba2
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@76ad99e5
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@76ad99e5
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3099dc06
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3099dc06
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3367b72a
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3367b72a
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@d24b0bd
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d24b0bd
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@23268c73
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@23268c73
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b798b5d
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@205f53a5
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@205f53a5
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@205f53a5
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ca06d8f
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ca06d8f
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ca06d8f
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@24407538
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2fe1c7d9
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@383c40a2
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@383c40a2
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@383c40a2
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b3cc3ab
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b3cc3ab
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b3cc3ab
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@34be1401
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4cf0606b
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2094411
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2094411
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f4ae251
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@7282af20
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7282af20
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@290973b2
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@290973b2
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25faeb0d
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24e6149d
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@45e4128c
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@1d986e12
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d986e12
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d24f1ef
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2392f8a7
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58dad0cb
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13c3c82a
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49b2f834
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7dd16665
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7383bd9c
2021-04-17 14:34:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e8ca95e
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-17 14:34:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-17 14:34:02 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-04-17 14:34:02 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.19
      major : 42
      minor : 2
2021-04-17 14:34:02 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-17 14:34:02 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL82Dialect
2021-04-17 14:34:02 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-17 14:34:03 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-17 14:34:03 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@274209e7
2021-04-17 14:34:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@274209e7
2021-04-17 14:34:03 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@23268c73
2021-04-17 14:34:03 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c9d4559] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7857a6e7]
2021-04-17 14:34:03 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.Likes
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-17 14:34:04 DEBUG EntityBinder:430 - Import with entity name Likes
2021-04-17 14:34:04 DEBUG EntityBinder:873 - Bind entity base.model.Likes on table PostLikes
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PostLikes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Likes] is safe
2021-04-17 14:34:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Likes
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Likes:likeId]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property likeId
2021-04-17 14:34:04 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PostLikes), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Likes:postId]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property postId
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PostLikes), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Likes:userId]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property userId
2021-04-17 14:34:04 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.Photos
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-17 14:34:04 DEBUG EntityBinder:430 - Import with entity name Photos
2021-04-17 14:34:04 DEBUG EntityBinder:873 - Bind entity base.model.Photos on table Photos
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Photos] is safe
2021-04-17 14:34:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Photos
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property photoId with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Photos:photoId]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for photoId
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property photoId
2021-04-17 14:34:04 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(photo_id)]), photoId, identity, , ...)
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=imageData, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property imageData with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Photos:imageData]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for imageData
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property imageData
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=myPost, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property myPost
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=photobyte, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property photoString with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Photos:photoString]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for photoString
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property photoString
2021-04-17 14:34:04 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.Post
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-17 14:34:04 DEBUG EntityBinder:430 - Import with entity name Post
2021-04-17 14:34:04 DEBUG EntityBinder:873 - Bind entity base.model.Post on table User_Post
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Post] is safe
2021-04-17 14:34:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Post
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:postId]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property postId
2021-04-17 14:34:04 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=post_description, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:description]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property description
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=media, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property media with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:media]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for media
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property media
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='myPost'}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=photoList, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=photoList_KEY, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='photoList_KEY', referencedColumn='null', mappedBy='null'}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='myPost'}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='myPost'}
2021-04-17 14:34:04 DEBUG CollectionBinder:449 - Collection role: base.model.Post.photoList
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property photoList
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=post_submitted, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property submitted with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:submitted]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for submitted
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property submitted
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=userId, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property userId
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-04-17 14:34:04 DEBUG CollectionBinder:449 - Collection role: base.model.Post.users
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property users
2021-04-17 14:34:04 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.User
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-17 14:34:04 DEBUG EntityBinder:430 - Import with entity name User
2021-04-17 14:34:04 DEBUG EntityBinder:873 - Bind entity base.model.User on table Users
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.User] is safe
2021-04-17 14:34:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.User
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:userId]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property userId
2021-04-17 14:34:04 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_avatar, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property avatar with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:avatar]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for avatar
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property avatar
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_email, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:email]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property email
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_fname, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:fname]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property fname
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_lname, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:lname]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property lname
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=loggedin, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property loginStatus with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:loginStatus]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for loginStatus
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property loginStatus
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:password]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property password
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=postLikes_KEY, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='postLikes_KEY', referencedColumn='null', mappedBy='null'}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='users'}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='users'}
2021-04-17 14:34:04 DEBUG CollectionBinder:449 - Collection role: base.model.User.postLikes
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property postLikes
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=postList, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=postList_KEY, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='postList_KEY', referencedColumn='null', mappedBy='null'}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
2021-04-17 14:34:04 DEBUG CollectionBinder:449 - Collection role: base.model.User.postList
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property postList
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userDescription with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:userDescription]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for userDescription
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property userDescription
2021-04-17 14:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_username, insertable=true, updatable=true, unique=false}
2021-04-17 14:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-04-17 14:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:username]
2021-04-17 14:34:04 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-04-17 14:34:04 DEBUG PropertyBinder:266 - Building property username
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for photoId
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for imageData
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for photoString
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for media
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for submitted
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for avatar
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for loginStatus
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userDescription
2021-04-17 14:34:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-04-17 14:34:04 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [postlikes]
2021-04-17 14:34:04 DEBUG PrimaryKey:35 - Forcing column [photo_id] to be non-null as it is part of the primary key for table [photos]
2021-04-17 14:34:04 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [user_post]
2021-04-17 14:34:04 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-04-17 14:34:04 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.Post.users
2021-04-17 14:34:04 DEBUG CollectionBinder:1338 - Binding as ManyToMany: base.model.Post.users
2021-04-17 14:34:04 DEBUG CollectionSecondPass:67 - Mapped collection key: post_id, element: user_id
2021-04-17 14:34:04 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.Post.photoList
2021-04-17 14:34:04 DEBUG CollectionBinder:903 - Binding a OneToMany: base.model.Post.photoList through a foreign key
2021-04-17 14:34:04 DEBUG CollectionBinder:941 - Mapping collection: base.model.Post.photoList -> Photos
2021-04-17 14:34:04 DEBUG TableBinder:554 - Retrieving property base.model.Photos.myPost
2021-04-17 14:34:04 DEBUG CollectionSecondPass:67 - Mapped collection key: post_id, one-to-many: base.model.Photos
2021-04-17 14:34:04 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.User.postLikes
2021-04-17 14:34:04 DEBUG CollectionBinder:1338 - Binding as ManyToMany: base.model.User.postLikes
2021-04-17 14:34:04 DEBUG TableBinder:554 - Retrieving property base.model.Post.users
2021-04-17 14:34:04 DEBUG CollectionSecondPass:67 - Mapped collection key: user_id, element: post_id
2021-04-17 14:34:04 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.User.postList
2021-04-17 14:34:04 DEBUG CollectionBinder:903 - Binding a OneToMany: base.model.User.postList through a foreign key
2021-04-17 14:34:04 DEBUG CollectionBinder:941 - Mapping collection: base.model.User.postList -> User_Post
2021-04-17 14:34:04 DEBUG TableBinder:554 - Retrieving property base.model.Post.userId
2021-04-17 14:34:04 DEBUG CollectionSecondPass:67 - Mapped collection key: user_id, one-to-many: base.model.Post
2021-04-17 14:34:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-17 14:34:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-17 14:34:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-17 14:34:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-17 14:34:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-17 14:34:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-17 14:34:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-17 14:34:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-17 14:34:04 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-17 14:34:04 DEBUG Settings:68 - SessionFactory name : null
2021-04-17 14:34:04 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-17 14:34:04 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-17 14:34:04 DEBUG Settings:72 - Statistics: disabled
2021-04-17 14:34:04 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-17 14:34:04 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-17 14:34:04 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-17 14:34:04 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-17 14:34:04 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-17 14:34:04 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-17 14:34:04 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-17 14:34:04 DEBUG Settings:82 - Default null ordering: NONE
2021-04-17 14:34:04 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-17 14:34:04 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-17 14:34:04 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-17 14:34:04 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-17 14:34:04 DEBUG Settings:90 - Query language substitutions: {}
2021-04-17 14:34:04 DEBUG Settings:91 - Named query checking : enabled
2021-04-17 14:34:04 DEBUG Settings:93 - Second-level cache: disabled
2021-04-17 14:34:04 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-17 14:34:04 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-17 14:34:04 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-17 14:34:04 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-17 14:34:04 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-17 14:34:04 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-17 14:34:04 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-17 14:34:04 DEBUG Settings:102 - JDBC batch size: 15
2021-04-17 14:34:04 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-17 14:34:04 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-17 14:34:04 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-17 14:34:04 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-17 14:34:04 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-17 14:34:04 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-04-17 14:34:04 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-17 14:34:04 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-17 14:34:04 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-17 14:34:04 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-17 14:34:04 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-17 14:34:04 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-17 14:34:04 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=false, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7fc55665, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect, java.class.path=C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\bin\bootstrap.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\bin\commons-daemon.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\bin\tomcat-juli.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\annotations-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-ant.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-ha.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-ssi.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-storeconfig.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-tribes.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\ecj-4.18.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\el-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jasper-el.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jasper.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jaspic-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jsp-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\servlet-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-coyote.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-dbcp.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-cs.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-de.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-es.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-fr.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-ja.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-ko.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-pt-BR.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-ru.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-zh-CN.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-jdbc.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-jni.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-util-scan.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-util.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-websocket.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=true, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_281\jre\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, sun.cpu.endian=little, user.home=C:\Users\frost, user.language=en, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.home=C:\Program Files\Java\jdk1.8.0_281\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_281\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_281\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, server.loader=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_281-b09, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=frost, path.separator=;, common.loader="C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib","C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib/*.jar","C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib","C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib/*.jar", os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_281\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[ParallelWebappClassLoader
  context: social
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@2530c12
], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\frost\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\frost\.SmartTomcat\social_media\social_media.main, java.version=1.8.0_281, java.util.concurrent.ForkJoinPool.common.threadFactory=org.apache.catalina.startup.SafeForkJoinWorkerThreadFactory, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\frost\.SmartTomcat\social_media\social_media.main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\frost\.SmartTomcat\social_media\social_media.main, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6058089c, java.library.path=C:\Program Files\Java\jdk1.8.0_281\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Users\frost\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\frost\AppData\Local\Programs\Python\Python38-32\;C:\Users\frost\AppData\Local\Microsoft\WindowsApps;C:\Users\frost\AppData\Local\GitHubDesktop\bin;C:\Users\frost\Documents\Misc\ffmpeg-20200628-4cfcfb3-win64-static\bin;;C:\Users\frost\AppData\Local\Microsoft\WindowsApps;C:\Users\frost\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\frost\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.281-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@5bd3cfd2, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_281\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=52.0}
2021-04-17 14:34:04 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-17 14:34:04 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-17 14:34:04 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c9d4559] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c636178]
2021-04-17 14:34:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Photos] is safe
2021-04-17 14:34:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Photos
2021-04-17 14:34:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.User] is safe
2021-04-17 14:34:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.User
2021-04-17 14:34:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Likes] is safe
2021-04-17 14:34:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Likes
2021-04-17 14:34:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Post] is safe
2021-04-17 14:34:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Post
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.Post.users
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into PostLikes (post_id, user_id) values (?, ?)
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:697 -  Row update: update PostLikes set user_id=? where post_id=? and user_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from PostLikes where post_id=? and user_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from PostLikes where post_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.User.postLikes
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into PostLikes (user_id, post_id) values (?, ?)
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:697 -  Row update: update PostLikes set post_id=? where user_id=? and post_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from PostLikes where user_id=? and post_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from PostLikes where user_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.User.postList
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:694 -  Row insert: update User_Post set user_id=? where post_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:697 -  Row update: update User_Post set  where post_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:700 -  Row delete: update User_Post set user_id=null where user_id=? and post_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update User_Post set user_id=null where user_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.Post.photoList
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:694 -  Row insert: update Photos set post_id=? where photo_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:697 -  Row update: update Photos set  where photo_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:700 -  Row delete: update Photos set post_id=null where post_id=? and photo_id=?
2021-04-17 14:34:05 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update Photos set post_id=null where post_id=?
2021-04-17 14:34:05 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.Photos
2021-04-17 14:34:05 DEBUG AbstractEntityPersister:3923 -  Version select: select photo_id from Photos where photo_id =?
2021-04-17 14:34:05 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select photos_.photo_id, photos_.imageData as imagedat2_0_, photos_.post_id as post_id4_0_, photos_.photobyte as photobyt3_0_ from Photos photos_ where photos_.photo_id=?
2021-04-17 14:34:05 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Photos (imageData, post_id, photobyte, photo_id) values (?, ?, ?, ?)
2021-04-17 14:34:05 DEBUG AbstractEntityPersister:394 -  Update 0: update Photos set imageData=?, post_id=?, photobyte=? where photo_id=?
2021-04-17 14:34:05 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Photos where photo_id=?
2021-04-17 14:34:05 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into Photos (imageData, post_id, photobyte) values (?, ?, ?)
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d30d3ab]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : imageData
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@361516c9]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.description
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.media
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.photoList
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : myPost.photoList
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.submitted
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@375eead2]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.avatar
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.email
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.fname
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.lname
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.loginStatus
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.password
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.postLikes
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ef940d6]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13ca2496]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.postList
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : myPost.userId.postList
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.userDescription
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.username
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.users
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2138dd36]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6394a313]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoString
2021-04-17 14:34:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 14:34:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 14:34:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.Photos)
    - Returns
       - EntityReturnImpl(entity=base.model.Photos, querySpaceUid=<gen:0>, path=base.model.Photos)
          - EntityAttributeFetchImpl(entity=base.model.Post, querySpaceUid=<gen:1>, path=base.model.Photos.myPost)
             - EntityAttributeFetchImpl(entity=base.model.User, querySpaceUid=<gen:2>, path=base.model.Photos.myPost.userId)
                - CollectionAttributeFetchImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:3>, path=base.model.Photos.myPost.userId.postLikes)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:4>, path=base.model.Photos.myPost.userId.postLikes.<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:5>, path=base.model.Photos.myPost.users)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:6>, path=base.model.Photos.myPost.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.Photos)
          - SQL table alias mapping - photos0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(myPost)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(userId)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=base.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}

2021-04-17 14:34:06 DEBUG EntityLoader:129 - Static select for entity base.model.Photos [NONE]: select photos0_.photo_id as photo_id1_0_0_, photos0_.imageData as imagedat2_0_0_, photos0_.post_id as post_id4_0_0_, photos0_.photobyte as photobyt3_0_0_, post1_.post_id as post_id1_2_1_, post1_.post_description as post_des2_2_1_, post1_.media as media3_2_1_, post1_.post_submitted as post_sub4_2_1_, post1_.user_id as user_id5_2_1_, user2_.user_id as user_id1_3_2_, user2_.user_avatar as user_ava2_3_2_, user2_.user_email as user_ema3_3_2_, user2_.user_fname as user_fna4_3_2_, user2_.user_lname as user_lna5_3_2_, user2_.loggedin as loggedin6_3_2_, user2_.user_password as user_pas7_3_2_, user2_.description as descript8_3_2_, user2_.user_username as user_use9_3_2_ from Photos photos0_ left outer join User_Post post1_ on photos0_.post_id=post1_.post_id left outer join Users user2_ on post1_.user_id=user2_.user_id where photos0_.photo_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.User
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3923 -  Version select: select user_id from Users where user_id =?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select user_.user_id, user_.user_avatar as user_ava2_3_, user_.user_email as user_ema3_3_, user_.user_fname as user_fna4_3_, user_.user_lname as user_lna5_3_, user_.loggedin as loggedin6_3_, user_.user_password as user_pas7_3_, user_.description as descript8_3_, user_.user_username as user_use9_3_ from Users user_ where user_.user_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (user_avatar, user_email, user_fname, user_lname, loggedin, user_password, description, user_username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set user_avatar=?, user_email=?, user_fname=?, user_lname=?, loggedin=?, user_password=?, description=?, user_username=? where user_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into Users (user_avatar, user_email, user_fname, user_lname, loggedin, user_password, description, user_username) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10650eb3]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : avatar
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : loginStatus
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postLikes
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e00725]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34fbfb3c]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c537b86]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cdeaddf]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.description
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.media
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e649add]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f308da5]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList.imageData
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList.myPost
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : postList.photoList.myPost
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList.photoString
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.submitted
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.userId
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : postList.userId
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.users
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d445f44]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@656de7b2]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userDescription
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-04-17 14:34:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 14:34:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 14:34:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.User)
    - Returns
       - EntityReturnImpl(entity=base.model.User, querySpaceUid=<gen:0>, path=base.model.User)
          - CollectionAttributeFetchImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:1>, path=base.model.User.postLikes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:2>, path=base.model.User.postLikes.<elements>)
          - CollectionAttributeFetchImpl(collection=base.model.User.postList, querySpaceUid=<gen:3>, path=base.model.User.postList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:4>, path=base.model.User.postList.<elements>)
                - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:5>, path=base.model.User.postList.<elements>.photoList)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:6>, path=base.model.User.postList.<elements>.photoList.<elements>)
                - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:7>, path=base.model.User.postList.<elements>.users)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:8>, path=base.model.User.postList.<elements>.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(postList)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=base.model.User.postList)
                - SQL table alias mapping - postlist1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - post_id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=base.model.Post)
                      - SQL table alias mapping - postlist1_
                      - alias suffix - 2_
                      - suffixed key columns - {post_id1_2_2_}
                      - JOIN (JoinDefinedByMetadata(photoList)) : <gen:4> -> <gen:5>
                         - CollectionQuerySpaceImpl(uid=<gen:5>, collection=base.model.Post.photoList)
                            - SQL table alias mapping - photolist2_
                            - alias suffix - 3_
                            - suffixed key columns - {post_id4_0_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - photo_id1_0_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                               - EntityQuerySpaceImpl(uid=<gen:6>, entity=base.model.Photos)
                                  - SQL table alias mapping - photolist2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {photo_id1_0_4_}

2021-04-17 14:34:06 DEBUG EntityLoader:129 - Static select for entity base.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.Likes
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3923 -  Version select: select like_id from PostLikes where like_id =?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select likes_.like_id, likes_.post_id as post_id2_1_, likes_.user_id as user_id3_1_ from PostLikes likes_ where likes_.like_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PostLikes (post_id, user_id, like_id) values (?, ?, ?)
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:394 -  Update 0: update PostLikes set post_id=?, user_id=? where like_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PostLikes where like_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into PostLikes (post_id, user_id) values (?, ?)
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66748783]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postId
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-17 14:34:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 14:34:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 14:34:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.Likes)
    - Returns
       - EntityReturnImpl(entity=base.model.Likes, querySpaceUid=<gen:0>, path=base.model.Likes)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.Likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_1_0_}

2021-04-17 14:34:06 DEBUG EntityLoader:129 - Static select for entity base.model.Likes [NONE]: select likes0_.like_id as like_id1_1_0_, likes0_.post_id as post_id2_1_0_, likes0_.user_id as user_id3_1_0_ from PostLikes likes0_ where likes0_.like_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.Post
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3923 -  Version select: select post_id from User_Post where post_id =?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select post_.post_id, post_.post_description as post_des2_2_, post_.media as media3_2_, post_.post_submitted as post_sub4_2_, post_.user_id as user_id5_2_ from User_Post post_ where post_.post_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into User_Post (post_description, media, post_submitted, user_id, post_id) values (?, ?, ?, ?, ?)
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:394 -  Update 0: update User_Post set post_description=?, media=?, post_submitted=?, user_id=? where post_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from User_Post where post_id=?
2021-04-17 14:34:06 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into User_Post (post_description, media, post_submitted, user_id) values (?, ?, ?, ?)
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d17f139]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : media
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10700876]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f2cd99d]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList.imageData
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList.myPost
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : photoList.myPost
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList.photoString
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b4d864]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.avatar
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.email
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.fname
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.lname
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.loginStatus
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.password
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postLikes
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ee8903e]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d58f0f5]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postList
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId.postList
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.userDescription
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.username
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@627078c2]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a028894]
2021-04-17 14:34:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 14:34:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 14:34:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.Post)
    - Returns
       - EntityReturnImpl(entity=base.model.Post, querySpaceUid=<gen:0>, path=base.model.Post)
          - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:1>, path=base.model.Post.photoList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:2>, path=base.model.Post.photoList.<elements>)
          - EntityAttributeFetchImpl(entity=base.model.User, querySpaceUid=<gen:3>, path=base.model.Post.userId)
             - CollectionAttributeFetchImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:4>, path=base.model.Post.userId.postLikes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:5>, path=base.model.Post.userId.postLikes.<elements>)
          - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:6>, path=base.model.Post.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:7>, path=base.model.Post.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(photoList)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=base.model.Post.photoList)
                - SQL table alias mapping - photolist1_
                - alias suffix - 1_
                - suffixed key columns - {post_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - photo_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=base.model.Photos)
                      - SQL table alias mapping - photolist1_
                      - alias suffix - 2_
                      - suffixed key columns - {photo_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(userId)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=base.model.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-04-17 14:34:06 DEBUG EntityLoader:129 - Static select for entity base.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.post_description as post_des2_2_0_, post0_.media as media3_2_0_, post0_.post_submitted as post_sub4_2_0_, post0_.user_id as user_id5_2_0_, photolist1_.post_id as post_id4_0_1_, photolist1_.photo_id as photo_id1_0_1_, photolist1_.photo_id as photo_id1_0_2_, photolist1_.imageData as imagedat2_0_2_, photolist1_.post_id as post_id4_0_2_, photolist1_.photobyte as photobyt3_0_2_, user2_.user_id as user_id1_3_3_, user2_.user_avatar as user_ava2_3_3_, user2_.user_email as user_ema3_3_3_, user2_.user_fname as user_fna4_3_3_, user2_.user_lname as user_lna5_3_3_, user2_.loggedin as loggedin6_3_3_, user2_.user_password as user_pas7_3_3_, user2_.description as descript8_3_3_, user2_.user_username as user_use9_3_3_ from User_Post post0_ left outer join Photos photolist1_ on post0_.post_id=photolist1_.post_id left outer join Users user2_ on post0_.user_id=user2_.user_id where post0_.post_id=?
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48ae046f]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6982de29]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : avatar
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : loginStatus
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postLikes
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : postLikes
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@286d2ed5]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57e1ce67]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userDescription
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-04-17 14:34:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 14:34:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 14:34:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.Post.users)
    - Returns
       - CollectionReturnImpl(collection=base.model.Post.users, querySpaceUid=<gen:0>, path=[base.model.Post.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:1>, path=[base.model.Post.users].<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.User.postList, querySpaceUid=<gen:2>, path=[base.model.Post.users].<elements>.postList)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:3>, path=[base.model.Post.users].<elements>.postList.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.Post.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {post_id2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-04-17 14:34:06 DEBUG CollectionLoader:83 - Static select for collection base.model.Post.users: select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d918b2d]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c7e463b]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : media
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1749aa71]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79e8693d]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d8fee2]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.avatar
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.email
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.fname
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.lname
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.loginStatus
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.password
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postLikes
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId.postLikes
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postList
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId.postList
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.userDescription
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.username
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : users
2021-04-17 14:34:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 14:34:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 14:34:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.User.postLikes)
    - Returns
       - CollectionReturnImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:0>, path=[base.model.User.postLikes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:1>, path=[base.model.User.postLikes].<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:2>, path=[base.model.User.postLikes].<elements>.photoList)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:3>, path=[base.model.User.postLikes].<elements>.photoList.<elements>)
             - EntityAttributeFetchImpl(entity=base.model.User, querySpaceUid=<gen:4>, path=[base.model.User.postLikes].<elements>.userId)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.User.postLikes)
          - SQL table alias mapping - postlikes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(userId)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=base.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}

2021-04-17 14:34:06 DEBUG CollectionLoader:83 - Static select for collection base.model.User.postLikes: select postlikes0_.user_id as user_id3_1_0_, postlikes0_.post_id as post_id2_1_0_, post1_.post_id as post_id1_2_1_, post1_.post_description as post_des2_2_1_, post1_.media as media3_2_1_, post1_.post_submitted as post_sub4_2_1_, post1_.user_id as user_id5_2_1_, user2_.user_id as user_id1_3_2_, user2_.user_avatar as user_ava2_3_2_, user2_.user_email as user_ema3_3_2_, user2_.user_fname as user_fna4_3_2_, user2_.user_lname as user_lna5_3_2_, user2_.loggedin as loggedin6_3_2_, user2_.user_password as user_pas7_3_2_, user2_.description as descript8_3_2_, user2_.user_username as user_use9_3_2_ from PostLikes postlikes0_ inner join User_Post post1_ on postlikes0_.post_id=post1_.post_id left outer join Users user2_ on post1_.user_id=user2_.user_id where postlikes0_.user_id=?
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cd1642c]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464a5b0a]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : media
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ea90765]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aaf9bb1]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bae36d1]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@556d7c74]
2021-04-17 14:34:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 14:34:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 14:34:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.User.postList)
    - Returns
       - CollectionReturnImpl(collection=base.model.User.postList, querySpaceUid=<gen:0>, path=[base.model.User.postList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:1>, path=[base.model.User.postList].<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:2>, path=[base.model.User.postList].<elements>.photoList)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:3>, path=[base.model.User.postList].<elements>.photoList.<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:4>, path=[base.model.User.postList].<elements>.users)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:5>, path=[base.model.User.postList].<elements>.users.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.User.postList)
          - SQL table alias mapping - postlist0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Post)
                - SQL table alias mapping - postlist0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}

2021-04-17 14:34:06 DEBUG CollectionLoader:83 - Static select for collection base.model.User.postList: select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fbf0488]
2021-04-17 14:34:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@418f49d7]
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : imageData
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : myPost
2021-04-17 14:34:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoString
2021-04-17 14:34:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 14:34:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 14:34:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.Post.photoList)
    - Returns
       - CollectionReturnImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:0>, path=[base.model.Post.photoList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:1>, path=[base.model.Post.photoList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.Post.photoList)
          - SQL table alias mapping - photolist0_
          - alias suffix - 0_
          - suffixed key columns - {post_id4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - photo_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Photos)
                - SQL table alias mapping - photolist0_
                - alias suffix - 1_
                - suffixed key columns - {photo_id1_0_1_}

2021-04-17 14:34:06 DEBUG CollectionLoader:83 - Static select for collection base.model.Post.photoList: select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 14:34:06 DEBUG SQL:144 - alter table Photos drop constraint FKpe0df8jfc7gusfs58n4pavnfj
2021-04-17 14:34:07 DEBUG SQL:144 - alter table PostLikes drop constraint FKqr2tesgyxdvumu7w99ey582b8
2021-04-17 14:34:07 DEBUG SQL:144 - alter table PostLikes drop constraint FKg7gnqlsmheo3bw8hjnkxj66ng
2021-04-17 14:34:07 DEBUG SQL:144 - alter table User_Post drop constraint FK2cw566aoa9rahg1lft0s2jxqd
2021-04-17 14:34:07 DEBUG SQL:144 - drop table if exists Photos cascade
2021-04-17 14:34:07 DEBUG SQL:144 - drop table if exists PostLikes cascade
2021-04-17 14:34:07 DEBUG SQL:144 - drop table if exists User_Post cascade
2021-04-17 14:34:07 DEBUG SQL:144 - drop table if exists Users cascade
2021-04-17 14:34:07 DEBUG SQL:144 - create table Photos (photo_id  serial not null, imageData bytea, photobyte varchar(255), post_id int4, primary key (photo_id))
2021-04-17 14:34:08 DEBUG SQL:144 - create table PostLikes (like_id  serial not null, post_id int4, user_id int4, primary key (like_id))
2021-04-17 14:34:08 DEBUG SQL:144 - create table User_Post (post_id  serial not null, post_description varchar(255), media varchar(255), post_submitted timestamp, user_id int4, primary key (post_id))
2021-04-17 14:34:08 DEBUG SQL:144 - create table Users (user_id  serial not null, user_avatar varchar(255) not null, user_email varchar(255) not null, user_fname varchar(255) not null, user_lname varchar(255) not null, loggedin boolean, user_password varchar(255) not null, description varchar(255), user_username varchar(255) not null, primary key (user_id))
2021-04-17 14:34:08 DEBUG SQL:144 - alter table Photos add constraint FKpe0df8jfc7gusfs58n4pavnfj foreign key (post_id) references User_Post
2021-04-17 14:34:08 DEBUG SQL:144 - alter table PostLikes add constraint FKqr2tesgyxdvumu7w99ey582b8 foreign key (user_id) references Users
2021-04-17 14:34:09 DEBUG SQL:144 - alter table PostLikes add constraint FKg7gnqlsmheo3bw8hjnkxj66ng foreign key (post_id) references User_Post
2021-04-17 14:34:09 DEBUG SQL:144 - alter table User_Post add constraint FK2cw566aoa9rahg1lft0s2jxqd foreign key (user_id) references Users
2021-04-17 14:34:09 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-17 14:34:09 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-17 14:34:09 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-17 14:34:09 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-17 14:34:09 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-17 14:34:09 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-17 14:34:09 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d49966c
2021-04-17 14:34:09 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 18fba0a9-bba4-472d-a228-65a6ef266c96 (<unnamed>)
2021-04-17 14:34:09 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-17 14:34:09 INFO  LikesDaoImpl:52 - LikesDaoImpl constructor with sesFact req called
2021-04-17 14:34:09 INFO  LikesDaoImpl:66 - sesFact set called via setter
2021-04-17 14:34:09 INFO  LikesController:52 - likes controller likesDao constructor has been referenced
2021-04-17 14:34:09 INFO  LikesController:66 - Setting likesDao in setter
2021-04-17 14:34:09 INFO  PhotoDaoImpl:148 - Constructor called for PhotoDaoImpl with sesFact req
2021-04-17 14:34:09 INFO  PhotoDaoImpl:159 - Setter called for sesFact
2021-04-17 14:34:09 INFO  PhotoService:34 - In no arg constructor for PhotoService
2021-04-17 14:34:09 INFO  PhotoController:84 - In constructor for PhotoController with reqs photoDao and photoService
2021-04-17 14:34:09 INFO  PhotoController:99 - In setter for photoDao
2021-04-17 14:34:09 INFO  PhotoController:110 - In setter for photoService
2021-04-17 14:34:09 INFO  PostDaoImpl:56 - Called no arg constructor for PostDaoImpl
2021-04-17 14:34:09 INFO  PostDaoImpl:75 - Setter called for sesFact
2021-04-17 14:34:09 INFO  PostController:75 - In postDao constructor for PostController
2021-04-17 14:34:09 INFO  UserDaoImpl:99 - In no arg constructor for UserDaoImpl
2021-04-17 14:34:09 INFO  UserDaoImpl:114 - Setter called for sesFact
2021-04-17 14:34:09 INFO  SessionController:93 - In constructor for SessionController with reqs userDao and uServ
2021-04-17 14:34:09 INFO  SessionController:110 - Setting userDao via setter
2021-04-17 14:34:09 INFO  UserController:99 - In Usercontroller constructor with UserDao/UserService reqs
2021-04-17 14:34:09 INFO  UserController:119 - In setter for userDao
2021-04-17 14:34:11 INFO  SocketHandler:19 - registerWebsocketHandlers method called
2021-04-17 14:34:11 INFO  SocketHandler:25 - Creating WebSocketHandler bean
2021-04-17 17:14:39 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-17 17:14:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-17 17:14:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-17 17:14:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-17 17:14:39 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-04-17 17:14:39 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-17 17:14:40 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-04-17 17:14:40 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-17 17:14:40 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-17 17:14:40 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-17 17:14:40 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-17 17:14:40 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@27f98d67
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@27f98d67
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27f98d67
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6705de13
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@56cb884a
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@369be0b3
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6142dea8
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6142dea8
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6142dea8
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5eb0f505
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5eb0f505
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5eb0f505
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@418c67f0
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@418c67f0
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@418c67f0
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@5b20f9fa
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@5b20f9fa
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b20f9fa
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@54da33a8
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@54da33a8
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54da33a8
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6811a286
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6811a286
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6811a286
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@51f5c371
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@51f5c371
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51f5c371
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a53259b
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a53259b
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d3026b9
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d3026b9
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@6d5832db
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6d5832db
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@319d7873
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3781f959
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@7b3818f6
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b3818f6
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@5910d02e
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5910d02e
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@2a8a3c10
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2a8a3c10
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d2d23e
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d2d23e
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d0e3120
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d0e3120
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@12ad11af
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@12ad11af
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@640cbd7d
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@640cbd7d
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24bdb303
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24bdb303
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5901612e
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5901612e
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@fc53642
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@fc53642
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@5a08b2a
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a08b2a
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@432bfbb5
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@432bfbb5
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@432bfbb5
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65d3e9be
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@d769b48
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@d769b48
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@d769b48
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@25204ec9
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@75f40ba2
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@76ad99e5
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@76ad99e5
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3099dc06
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3099dc06
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3367b72a
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3367b72a
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@d24b0bd
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d24b0bd
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@23268c73
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@23268c73
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b798b5d
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@205f53a5
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@205f53a5
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@205f53a5
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ca06d8f
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ca06d8f
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ca06d8f
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@24407538
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2fe1c7d9
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@383c40a2
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@383c40a2
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@383c40a2
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b3cc3ab
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b3cc3ab
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b3cc3ab
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@34be1401
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4cf0606b
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2094411
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2094411
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f4ae251
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@7282af20
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7282af20
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@290973b2
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@290973b2
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25faeb0d
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24e6149d
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@45e4128c
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@1d986e12
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d986e12
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d24f1ef
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2392f8a7
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58dad0cb
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13c3c82a
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49b2f834
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7dd16665
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7383bd9c
2021-04-17 17:14:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e8ca95e
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-17 17:14:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-17 17:14:42 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-04-17 17:14:42 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.19
      major : 42
      minor : 2
2021-04-17 17:14:42 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-17 17:14:42 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL82Dialect
2021-04-17 17:14:42 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-17 17:14:43 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-17 17:14:43 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@274209e7
2021-04-17 17:14:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@274209e7
2021-04-17 17:14:43 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@23268c73
2021-04-17 17:14:43 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c9d4559] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7857a6e7]
2021-04-17 17:14:43 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.Likes
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-17 17:14:43 DEBUG EntityBinder:430 - Import with entity name Likes
2021-04-17 17:14:43 DEBUG EntityBinder:873 - Bind entity base.model.Likes on table PostLikes
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PostLikes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Likes] is safe
2021-04-17 17:14:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Likes
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Likes:likeId]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property likeId
2021-04-17 17:14:43 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PostLikes), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Likes:postId]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property postId
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PostLikes), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Likes:userId]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property userId
2021-04-17 17:14:43 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.Photos
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-17 17:14:43 DEBUG EntityBinder:430 - Import with entity name Photos
2021-04-17 17:14:43 DEBUG EntityBinder:873 - Bind entity base.model.Photos on table Photos
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Photos] is safe
2021-04-17 17:14:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Photos
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property photoId with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Photos:photoId]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for photoId
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property photoId
2021-04-17 17:14:43 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(photo_id)]), photoId, identity, , ...)
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=imageData, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property imageData with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Photos:imageData]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for imageData
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property imageData
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=myPost, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property myPost
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=photobyte, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property photoString with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Photos:photoString]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for photoString
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property photoString
2021-04-17 17:14:43 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.Post
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-17 17:14:43 DEBUG EntityBinder:430 - Import with entity name Post
2021-04-17 17:14:43 DEBUG EntityBinder:873 - Bind entity base.model.Post on table User_Post
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Post] is safe
2021-04-17 17:14:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Post
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:postId]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property postId
2021-04-17 17:14:43 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=post_description, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:description]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property description
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=media, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property media with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:media]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for media
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property media
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='myPost'}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=photoList, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=photoList_KEY, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='photoList_KEY', referencedColumn='null', mappedBy='null'}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='myPost'}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='myPost'}
2021-04-17 17:14:43 DEBUG CollectionBinder:449 - Collection role: base.model.Post.photoList
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property photoList
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=post_submitted, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property submitted with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:submitted]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for submitted
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property submitted
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=userId, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property userId
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-04-17 17:14:43 DEBUG CollectionBinder:449 - Collection role: base.model.Post.users
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property users
2021-04-17 17:14:43 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.User
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-17 17:14:43 DEBUG EntityBinder:430 - Import with entity name User
2021-04-17 17:14:43 DEBUG EntityBinder:873 - Bind entity base.model.User on table Users
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.User] is safe
2021-04-17 17:14:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.User
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:userId]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property userId
2021-04-17 17:14:43 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_avatar, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property avatar with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:avatar]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for avatar
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property avatar
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_email, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:email]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property email
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_fname, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:fname]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property fname
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_lname, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:lname]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property lname
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=loggedin, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property loginStatus with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:loginStatus]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for loginStatus
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property loginStatus
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:password]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property password
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=postLikes_KEY, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='postLikes_KEY', referencedColumn='null', mappedBy='null'}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='users'}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='users'}
2021-04-17 17:14:43 DEBUG CollectionBinder:449 - Collection role: base.model.User.postLikes
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property postLikes
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=postList, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=postList_KEY, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='postList_KEY', referencedColumn='null', mappedBy='null'}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
2021-04-17 17:14:43 DEBUG CollectionBinder:449 - Collection role: base.model.User.postList
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property postList
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userDescription with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:userDescription]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for userDescription
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property userDescription
2021-04-17 17:14:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_username, insertable=true, updatable=true, unique=false}
2021-04-17 17:14:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-04-17 17:14:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:username]
2021-04-17 17:14:43 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-04-17 17:14:43 DEBUG PropertyBinder:266 - Building property username
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for photoId
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for imageData
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for photoString
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for media
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for submitted
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for avatar
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for loginStatus
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userDescription
2021-04-17 17:14:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-04-17 17:14:43 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [postlikes]
2021-04-17 17:14:43 DEBUG PrimaryKey:35 - Forcing column [photo_id] to be non-null as it is part of the primary key for table [photos]
2021-04-17 17:14:43 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [user_post]
2021-04-17 17:14:43 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-04-17 17:14:43 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.Post.users
2021-04-17 17:14:43 DEBUG CollectionBinder:1338 - Binding as ManyToMany: base.model.Post.users
2021-04-17 17:14:43 DEBUG CollectionSecondPass:67 - Mapped collection key: post_id, element: user_id
2021-04-17 17:14:43 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.Post.photoList
2021-04-17 17:14:43 DEBUG CollectionBinder:903 - Binding a OneToMany: base.model.Post.photoList through a foreign key
2021-04-17 17:14:43 DEBUG CollectionBinder:941 - Mapping collection: base.model.Post.photoList -> Photos
2021-04-17 17:14:43 DEBUG TableBinder:554 - Retrieving property base.model.Photos.myPost
2021-04-17 17:14:43 DEBUG CollectionSecondPass:67 - Mapped collection key: post_id, one-to-many: base.model.Photos
2021-04-17 17:14:43 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.User.postLikes
2021-04-17 17:14:43 DEBUG CollectionBinder:1338 - Binding as ManyToMany: base.model.User.postLikes
2021-04-17 17:14:43 DEBUG TableBinder:554 - Retrieving property base.model.Post.users
2021-04-17 17:14:43 DEBUG CollectionSecondPass:67 - Mapped collection key: user_id, element: post_id
2021-04-17 17:14:43 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.User.postList
2021-04-17 17:14:43 DEBUG CollectionBinder:903 - Binding a OneToMany: base.model.User.postList through a foreign key
2021-04-17 17:14:43 DEBUG CollectionBinder:941 - Mapping collection: base.model.User.postList -> User_Post
2021-04-17 17:14:43 DEBUG TableBinder:554 - Retrieving property base.model.Post.userId
2021-04-17 17:14:43 DEBUG CollectionSecondPass:67 - Mapped collection key: user_id, one-to-many: base.model.Post
2021-04-17 17:14:43 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-17 17:14:43 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-17 17:14:43 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-17 17:14:43 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-17 17:14:43 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-17 17:14:43 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-17 17:14:43 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-17 17:14:43 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-17 17:14:44 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-17 17:14:44 DEBUG Settings:68 - SessionFactory name : null
2021-04-17 17:14:44 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-17 17:14:44 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-17 17:14:44 DEBUG Settings:72 - Statistics: disabled
2021-04-17 17:14:44 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-17 17:14:44 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-17 17:14:44 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-17 17:14:44 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-17 17:14:44 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-17 17:14:44 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-17 17:14:44 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-17 17:14:44 DEBUG Settings:82 - Default null ordering: NONE
2021-04-17 17:14:44 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-17 17:14:44 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-17 17:14:44 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-17 17:14:44 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-17 17:14:44 DEBUG Settings:90 - Query language substitutions: {}
2021-04-17 17:14:44 DEBUG Settings:91 - Named query checking : enabled
2021-04-17 17:14:44 DEBUG Settings:93 - Second-level cache: disabled
2021-04-17 17:14:44 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-17 17:14:44 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-17 17:14:44 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-17 17:14:44 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-17 17:14:44 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-17 17:14:44 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-17 17:14:44 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-17 17:14:44 DEBUG Settings:102 - JDBC batch size: 15
2021-04-17 17:14:44 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-17 17:14:44 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-17 17:14:44 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-17 17:14:44 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-17 17:14:44 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-17 17:14:44 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-04-17 17:14:44 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-17 17:14:44 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-17 17:14:44 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-17 17:14:44 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-17 17:14:44 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-17 17:14:44 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-17 17:14:44 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=false, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7fc55665, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect, java.class.path=C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\bin\bootstrap.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\bin\commons-daemon.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\bin\tomcat-juli.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\annotations-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-ant.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-ha.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-ssi.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-storeconfig.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-tribes.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\ecj-4.18.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\el-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jasper-el.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jasper.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jaspic-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jsp-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\servlet-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-coyote.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-dbcp.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-cs.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-de.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-es.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-fr.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-ja.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-ko.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-pt-BR.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-ru.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-zh-CN.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-jdbc.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-jni.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-util-scan.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-util.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-websocket.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=true, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_281\jre\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, sun.cpu.endian=little, user.home=C:\Users\frost, user.language=en, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.home=C:\Program Files\Java\jdk1.8.0_281\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_281\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_281\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, server.loader=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_281-b09, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=frost, path.separator=;, common.loader="C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib","C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib/*.jar","C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib","C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib/*.jar", os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_281\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[ParallelWebappClassLoader
  context: social
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@2530c12
], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\frost\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\frost\.SmartTomcat\social_media\social_media.main, java.version=1.8.0_281, java.util.concurrent.ForkJoinPool.common.threadFactory=org.apache.catalina.startup.SafeForkJoinWorkerThreadFactory, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\frost\.SmartTomcat\social_media\social_media.main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\frost\.SmartTomcat\social_media\social_media.main, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6058089c, java.library.path=C:\Program Files\Java\jdk1.8.0_281\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Users\frost\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\frost\AppData\Local\Programs\Python\Python38-32\;C:\Users\frost\AppData\Local\Microsoft\WindowsApps;C:\Users\frost\AppData\Local\GitHubDesktop\bin;C:\Users\frost\Documents\Misc\ffmpeg-20200628-4cfcfb3-win64-static\bin;;C:\Users\frost\AppData\Local\Microsoft\WindowsApps;C:\Users\frost\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\frost\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.281-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@5bd3cfd2, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_281\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=52.0}
2021-04-17 17:14:44 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-17 17:14:44 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-17 17:14:44 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c9d4559] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c636178]
2021-04-17 17:14:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Photos] is safe
2021-04-17 17:14:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Photos
2021-04-17 17:14:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.User] is safe
2021-04-17 17:14:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.User
2021-04-17 17:14:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Likes] is safe
2021-04-17 17:14:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Likes
2021-04-17 17:14:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Post] is safe
2021-04-17 17:14:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Post
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.Post.users
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into PostLikes (post_id, user_id) values (?, ?)
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:697 -  Row update: update PostLikes set user_id=? where post_id=? and user_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from PostLikes where post_id=? and user_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from PostLikes where post_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.User.postLikes
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into PostLikes (user_id, post_id) values (?, ?)
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:697 -  Row update: update PostLikes set post_id=? where user_id=? and post_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from PostLikes where user_id=? and post_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from PostLikes where user_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.User.postList
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:694 -  Row insert: update User_Post set user_id=? where post_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:697 -  Row update: update User_Post set  where post_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:700 -  Row delete: update User_Post set user_id=null where user_id=? and post_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update User_Post set user_id=null where user_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.Post.photoList
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:694 -  Row insert: update Photos set post_id=? where photo_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:697 -  Row update: update Photos set  where photo_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:700 -  Row delete: update Photos set post_id=null where post_id=? and photo_id=?
2021-04-17 17:14:45 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update Photos set post_id=null where post_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.Photos
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3923 -  Version select: select photo_id from Photos where photo_id =?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select photos_.photo_id, photos_.imageData as imagedat2_0_, photos_.post_id as post_id4_0_, photos_.photobyte as photobyt3_0_ from Photos photos_ where photos_.photo_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Photos (imageData, post_id, photobyte, photo_id) values (?, ?, ?, ?)
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Update 0: update Photos set imageData=?, post_id=?, photobyte=? where photo_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Photos where photo_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into Photos (imageData, post_id, photobyte) values (?, ?, ?)
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d30d3ab]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : imageData
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@361516c9]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.description
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.media
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.photoList
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : myPost.photoList
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.submitted
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@375eead2]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.avatar
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.email
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.fname
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.lname
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.loginStatus
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.password
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.postLikes
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ef940d6]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13ca2496]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.postList
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : myPost.userId.postList
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.userDescription
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.username
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.users
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2138dd36]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6394a313]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoString
2021-04-17 17:14:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 17:14:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 17:14:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.Photos)
    - Returns
       - EntityReturnImpl(entity=base.model.Photos, querySpaceUid=<gen:0>, path=base.model.Photos)
          - EntityAttributeFetchImpl(entity=base.model.Post, querySpaceUid=<gen:1>, path=base.model.Photos.myPost)
             - EntityAttributeFetchImpl(entity=base.model.User, querySpaceUid=<gen:2>, path=base.model.Photos.myPost.userId)
                - CollectionAttributeFetchImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:3>, path=base.model.Photos.myPost.userId.postLikes)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:4>, path=base.model.Photos.myPost.userId.postLikes.<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:5>, path=base.model.Photos.myPost.users)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:6>, path=base.model.Photos.myPost.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.Photos)
          - SQL table alias mapping - photos0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(myPost)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(userId)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=base.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}

2021-04-17 17:14:45 DEBUG EntityLoader:129 - Static select for entity base.model.Photos [NONE]: select photos0_.photo_id as photo_id1_0_0_, photos0_.imageData as imagedat2_0_0_, photos0_.post_id as post_id4_0_0_, photos0_.photobyte as photobyt3_0_0_, post1_.post_id as post_id1_2_1_, post1_.post_description as post_des2_2_1_, post1_.media as media3_2_1_, post1_.post_submitted as post_sub4_2_1_, post1_.user_id as user_id5_2_1_, user2_.user_id as user_id1_3_2_, user2_.user_avatar as user_ava2_3_2_, user2_.user_email as user_ema3_3_2_, user2_.user_fname as user_fna4_3_2_, user2_.user_lname as user_lna5_3_2_, user2_.loggedin as loggedin6_3_2_, user2_.user_password as user_pas7_3_2_, user2_.description as descript8_3_2_, user2_.user_username as user_use9_3_2_ from Photos photos0_ left outer join User_Post post1_ on photos0_.post_id=post1_.post_id left outer join Users user2_ on post1_.user_id=user2_.user_id where photos0_.photo_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.User
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3923 -  Version select: select user_id from Users where user_id =?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select user_.user_id, user_.user_avatar as user_ava2_3_, user_.user_email as user_ema3_3_, user_.user_fname as user_fna4_3_, user_.user_lname as user_lna5_3_, user_.loggedin as loggedin6_3_, user_.user_password as user_pas7_3_, user_.description as descript8_3_, user_.user_username as user_use9_3_ from Users user_ where user_.user_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (user_avatar, user_email, user_fname, user_lname, loggedin, user_password, description, user_username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set user_avatar=?, user_email=?, user_fname=?, user_lname=?, loggedin=?, user_password=?, description=?, user_username=? where user_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into Users (user_avatar, user_email, user_fname, user_lname, loggedin, user_password, description, user_username) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10650eb3]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : avatar
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : loginStatus
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postLikes
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e00725]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34fbfb3c]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c537b86]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cdeaddf]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.description
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.media
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e649add]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f308da5]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList.imageData
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList.myPost
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : postList.photoList.myPost
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList.photoString
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.submitted
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.userId
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : postList.userId
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.users
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d445f44]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@656de7b2]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userDescription
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-04-17 17:14:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 17:14:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 17:14:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.User)
    - Returns
       - EntityReturnImpl(entity=base.model.User, querySpaceUid=<gen:0>, path=base.model.User)
          - CollectionAttributeFetchImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:1>, path=base.model.User.postLikes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:2>, path=base.model.User.postLikes.<elements>)
          - CollectionAttributeFetchImpl(collection=base.model.User.postList, querySpaceUid=<gen:3>, path=base.model.User.postList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:4>, path=base.model.User.postList.<elements>)
                - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:5>, path=base.model.User.postList.<elements>.photoList)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:6>, path=base.model.User.postList.<elements>.photoList.<elements>)
                - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:7>, path=base.model.User.postList.<elements>.users)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:8>, path=base.model.User.postList.<elements>.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(postList)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=base.model.User.postList)
                - SQL table alias mapping - postlist1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - post_id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=base.model.Post)
                      - SQL table alias mapping - postlist1_
                      - alias suffix - 2_
                      - suffixed key columns - {post_id1_2_2_}
                      - JOIN (JoinDefinedByMetadata(photoList)) : <gen:4> -> <gen:5>
                         - CollectionQuerySpaceImpl(uid=<gen:5>, collection=base.model.Post.photoList)
                            - SQL table alias mapping - photolist2_
                            - alias suffix - 3_
                            - suffixed key columns - {post_id4_0_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - photo_id1_0_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                               - EntityQuerySpaceImpl(uid=<gen:6>, entity=base.model.Photos)
                                  - SQL table alias mapping - photolist2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {photo_id1_0_4_}

2021-04-17 17:14:45 DEBUG EntityLoader:129 - Static select for entity base.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.Likes
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3923 -  Version select: select like_id from PostLikes where like_id =?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select likes_.like_id, likes_.post_id as post_id2_1_, likes_.user_id as user_id3_1_ from PostLikes likes_ where likes_.like_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PostLikes (post_id, user_id, like_id) values (?, ?, ?)
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Update 0: update PostLikes set post_id=?, user_id=? where like_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PostLikes where like_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into PostLikes (post_id, user_id) values (?, ?)
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66748783]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postId
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-17 17:14:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 17:14:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 17:14:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.Likes)
    - Returns
       - EntityReturnImpl(entity=base.model.Likes, querySpaceUid=<gen:0>, path=base.model.Likes)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.Likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_1_0_}

2021-04-17 17:14:45 DEBUG EntityLoader:129 - Static select for entity base.model.Likes [NONE]: select likes0_.like_id as like_id1_1_0_, likes0_.post_id as post_id2_1_0_, likes0_.user_id as user_id3_1_0_ from PostLikes likes0_ where likes0_.like_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.Post
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3923 -  Version select: select post_id from User_Post where post_id =?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select post_.post_id, post_.post_description as post_des2_2_, post_.media as media3_2_, post_.post_submitted as post_sub4_2_, post_.user_id as user_id5_2_ from User_Post post_ where post_.post_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into User_Post (post_description, media, post_submitted, user_id, post_id) values (?, ?, ?, ?, ?)
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Update 0: update User_Post set post_description=?, media=?, post_submitted=?, user_id=? where post_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from User_Post where post_id=?
2021-04-17 17:14:45 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into User_Post (post_description, media, post_submitted, user_id) values (?, ?, ?, ?)
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d17f139]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : media
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10700876]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f2cd99d]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList.imageData
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList.myPost
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : photoList.myPost
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList.photoString
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b4d864]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.avatar
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.email
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.fname
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.lname
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.loginStatus
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.password
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postLikes
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ee8903e]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d58f0f5]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postList
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId.postList
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.userDescription
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.username
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@627078c2]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a028894]
2021-04-17 17:14:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 17:14:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 17:14:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.Post)
    - Returns
       - EntityReturnImpl(entity=base.model.Post, querySpaceUid=<gen:0>, path=base.model.Post)
          - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:1>, path=base.model.Post.photoList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:2>, path=base.model.Post.photoList.<elements>)
          - EntityAttributeFetchImpl(entity=base.model.User, querySpaceUid=<gen:3>, path=base.model.Post.userId)
             - CollectionAttributeFetchImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:4>, path=base.model.Post.userId.postLikes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:5>, path=base.model.Post.userId.postLikes.<elements>)
          - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:6>, path=base.model.Post.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:7>, path=base.model.Post.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(photoList)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=base.model.Post.photoList)
                - SQL table alias mapping - photolist1_
                - alias suffix - 1_
                - suffixed key columns - {post_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - photo_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=base.model.Photos)
                      - SQL table alias mapping - photolist1_
                      - alias suffix - 2_
                      - suffixed key columns - {photo_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(userId)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=base.model.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-04-17 17:14:45 DEBUG EntityLoader:129 - Static select for entity base.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.post_description as post_des2_2_0_, post0_.media as media3_2_0_, post0_.post_submitted as post_sub4_2_0_, post0_.user_id as user_id5_2_0_, photolist1_.post_id as post_id4_0_1_, photolist1_.photo_id as photo_id1_0_1_, photolist1_.photo_id as photo_id1_0_2_, photolist1_.imageData as imagedat2_0_2_, photolist1_.post_id as post_id4_0_2_, photolist1_.photobyte as photobyt3_0_2_, user2_.user_id as user_id1_3_3_, user2_.user_avatar as user_ava2_3_3_, user2_.user_email as user_ema3_3_3_, user2_.user_fname as user_fna4_3_3_, user2_.user_lname as user_lna5_3_3_, user2_.loggedin as loggedin6_3_3_, user2_.user_password as user_pas7_3_3_, user2_.description as descript8_3_3_, user2_.user_username as user_use9_3_3_ from User_Post post0_ left outer join Photos photolist1_ on post0_.post_id=photolist1_.post_id left outer join Users user2_ on post0_.user_id=user2_.user_id where post0_.post_id=?
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48ae046f]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6982de29]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : avatar
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : loginStatus
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postLikes
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : postLikes
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@286d2ed5]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57e1ce67]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userDescription
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-04-17 17:14:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 17:14:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 17:14:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.Post.users)
    - Returns
       - CollectionReturnImpl(collection=base.model.Post.users, querySpaceUid=<gen:0>, path=[base.model.Post.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:1>, path=[base.model.Post.users].<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.User.postList, querySpaceUid=<gen:2>, path=[base.model.Post.users].<elements>.postList)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:3>, path=[base.model.Post.users].<elements>.postList.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.Post.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {post_id2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-04-17 17:14:45 DEBUG CollectionLoader:83 - Static select for collection base.model.Post.users: select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d918b2d]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c7e463b]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : media
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1749aa71]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79e8693d]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d8fee2]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.avatar
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.email
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.fname
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.lname
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.loginStatus
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.password
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postLikes
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId.postLikes
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postList
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId.postList
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.userDescription
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.username
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : users
2021-04-17 17:14:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 17:14:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 17:14:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.User.postLikes)
    - Returns
       - CollectionReturnImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:0>, path=[base.model.User.postLikes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:1>, path=[base.model.User.postLikes].<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:2>, path=[base.model.User.postLikes].<elements>.photoList)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:3>, path=[base.model.User.postLikes].<elements>.photoList.<elements>)
             - EntityAttributeFetchImpl(entity=base.model.User, querySpaceUid=<gen:4>, path=[base.model.User.postLikes].<elements>.userId)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.User.postLikes)
          - SQL table alias mapping - postlikes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(userId)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=base.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}

2021-04-17 17:14:45 DEBUG CollectionLoader:83 - Static select for collection base.model.User.postLikes: select postlikes0_.user_id as user_id3_1_0_, postlikes0_.post_id as post_id2_1_0_, post1_.post_id as post_id1_2_1_, post1_.post_description as post_des2_2_1_, post1_.media as media3_2_1_, post1_.post_submitted as post_sub4_2_1_, post1_.user_id as user_id5_2_1_, user2_.user_id as user_id1_3_2_, user2_.user_avatar as user_ava2_3_2_, user2_.user_email as user_ema3_3_2_, user2_.user_fname as user_fna4_3_2_, user2_.user_lname as user_lna5_3_2_, user2_.loggedin as loggedin6_3_2_, user2_.user_password as user_pas7_3_2_, user2_.description as descript8_3_2_, user2_.user_username as user_use9_3_2_ from PostLikes postlikes0_ inner join User_Post post1_ on postlikes0_.post_id=post1_.post_id left outer join Users user2_ on post1_.user_id=user2_.user_id where postlikes0_.user_id=?
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cd1642c]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464a5b0a]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : media
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ea90765]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aaf9bb1]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bae36d1]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@556d7c74]
2021-04-17 17:14:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 17:14:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 17:14:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.User.postList)
    - Returns
       - CollectionReturnImpl(collection=base.model.User.postList, querySpaceUid=<gen:0>, path=[base.model.User.postList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:1>, path=[base.model.User.postList].<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:2>, path=[base.model.User.postList].<elements>.photoList)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:3>, path=[base.model.User.postList].<elements>.photoList.<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:4>, path=[base.model.User.postList].<elements>.users)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:5>, path=[base.model.User.postList].<elements>.users.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.User.postList)
          - SQL table alias mapping - postlist0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Post)
                - SQL table alias mapping - postlist0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}

2021-04-17 17:14:45 DEBUG CollectionLoader:83 - Static select for collection base.model.User.postList: select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fbf0488]
2021-04-17 17:14:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@418f49d7]
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : imageData
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : myPost
2021-04-17 17:14:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoString
2021-04-17 17:14:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-17 17:14:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-17 17:14:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.Post.photoList)
    - Returns
       - CollectionReturnImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:0>, path=[base.model.Post.photoList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:1>, path=[base.model.Post.photoList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.Post.photoList)
          - SQL table alias mapping - photolist0_
          - alias suffix - 0_
          - suffixed key columns - {post_id4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - photo_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Photos)
                - SQL table alias mapping - photolist0_
                - alias suffix - 1_
                - suffixed key columns - {photo_id1_0_1_}

2021-04-17 17:14:45 DEBUG CollectionLoader:83 - Static select for collection base.model.Post.photoList: select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 17:14:45 DEBUG SQL:144 - alter table Photos drop constraint FKpe0df8jfc7gusfs58n4pavnfj
2021-04-17 17:14:46 DEBUG SQL:144 - alter table PostLikes drop constraint FKqr2tesgyxdvumu7w99ey582b8
2021-04-17 17:14:46 DEBUG SQL:144 - alter table PostLikes drop constraint FKg7gnqlsmheo3bw8hjnkxj66ng
2021-04-17 17:14:46 DEBUG SQL:144 - alter table User_Post drop constraint FK2cw566aoa9rahg1lft0s2jxqd
2021-04-17 17:14:47 DEBUG SQL:144 - drop table if exists Photos cascade
2021-04-17 17:14:47 DEBUG SQL:144 - drop table if exists PostLikes cascade
2021-04-17 17:14:47 DEBUG SQL:144 - drop table if exists User_Post cascade
2021-04-17 17:14:47 DEBUG SQL:144 - drop table if exists Users cascade
2021-04-17 17:14:47 DEBUG SQL:144 - create table Photos (photo_id  serial not null, imageData bytea, photobyte varchar(255), post_id int4, primary key (photo_id))
2021-04-17 17:14:48 DEBUG SQL:144 - create table PostLikes (like_id  serial not null, post_id int4, user_id int4, primary key (like_id))
2021-04-17 17:14:48 DEBUG SQL:144 - create table User_Post (post_id  serial not null, post_description varchar(255), media varchar(255), post_submitted timestamp, user_id int4, primary key (post_id))
2021-04-17 17:14:48 DEBUG SQL:144 - create table Users (user_id  serial not null, user_avatar varchar(255) not null, user_email varchar(255) not null, user_fname varchar(255) not null, user_lname varchar(255) not null, loggedin boolean, user_password varchar(255) not null, description varchar(255), user_username varchar(255) not null, primary key (user_id))
2021-04-17 17:14:48 DEBUG SQL:144 - alter table Photos add constraint FKpe0df8jfc7gusfs58n4pavnfj foreign key (post_id) references User_Post
2021-04-17 17:14:48 DEBUG SQL:144 - alter table PostLikes add constraint FKqr2tesgyxdvumu7w99ey582b8 foreign key (user_id) references Users
2021-04-17 17:14:48 DEBUG SQL:144 - alter table PostLikes add constraint FKg7gnqlsmheo3bw8hjnkxj66ng foreign key (post_id) references User_Post
2021-04-17 17:14:48 DEBUG SQL:144 - alter table User_Post add constraint FK2cw566aoa9rahg1lft0s2jxqd foreign key (user_id) references Users
2021-04-17 17:14:48 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-17 17:14:48 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-17 17:14:48 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-17 17:14:48 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-17 17:14:48 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-17 17:14:48 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-17 17:14:48 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d49966c
2021-04-17 17:14:48 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 81c3bec8-2c09-4eff-af7f-350d30c5875a (<unnamed>)
2021-04-17 17:14:48 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-17 17:14:48 INFO  LikesDaoImpl:52 - LikesDaoImpl constructor with sesFact req called
2021-04-17 17:14:48 INFO  LikesDaoImpl:66 - sesFact set called via setter
2021-04-17 17:14:48 INFO  LikesController:52 - likes controller likesDao constructor has been referenced
2021-04-17 17:14:48 INFO  LikesController:66 - Setting likesDao in setter
2021-04-17 17:14:48 INFO  PhotoDaoImpl:148 - Constructor called for PhotoDaoImpl with sesFact req
2021-04-17 17:14:49 INFO  PhotoDaoImpl:159 - Setter called for sesFact
2021-04-17 17:14:49 INFO  PhotoService:34 - In no arg constructor for PhotoService
2021-04-17 17:14:49 INFO  PhotoController:84 - In constructor for PhotoController with reqs photoDao and photoService
2021-04-17 17:14:49 INFO  PhotoController:99 - In setter for photoDao
2021-04-17 17:14:49 INFO  PhotoController:110 - In setter for photoService
2021-04-17 17:14:49 INFO  PostDaoImpl:56 - Called no arg constructor for PostDaoImpl
2021-04-17 17:14:49 INFO  PostDaoImpl:75 - Setter called for sesFact
2021-04-17 17:14:49 INFO  PostController:75 - In postDao constructor for PostController
2021-04-17 17:14:49 INFO  UserDaoImpl:99 - In no arg constructor for UserDaoImpl
2021-04-17 17:14:49 INFO  UserDaoImpl:114 - Setter called for sesFact
2021-04-17 17:14:49 INFO  SessionController:93 - In constructor for SessionController with reqs userDao and uServ
2021-04-17 17:14:49 INFO  SessionController:110 - Setting userDao via setter
2021-04-17 17:14:49 INFO  UserController:99 - In Usercontroller constructor with UserDao/UserService reqs
2021-04-17 17:14:49 INFO  UserController:119 - In setter for userDao
2021-04-17 17:14:50 INFO  SocketHandler:19 - registerWebsocketHandlers method called
2021-04-17 17:14:50 INFO  SocketHandler:25 - Creating WebSocketHandler bean
2021-04-17 17:17:09 INFO  UserController:50 - In createNewUser call
2021-04-17 17:17:09 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-17 17:17:09 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:17:09 DEBUG TransactionImpl:81 - begin
2021-04-17 17:17:10 INFO  UserService:100 - In encryptPass method
2021-04-17 17:17:10 DEBUG TransactionImpl:98 - committing
2021-04-17 17:17:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:17:10 DEBUG TransactionImpl:81 - begin
2021-04-17 17:17:11 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-17 17:17:11 DEBUG SQL:144 - insert into Users (user_avatar, user_email, user_fname, user_lname, loggedin, user_password, description, user_username) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-04-17 17:17:11 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-04-17 17:17:11 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-17 17:17:11 INFO  UserDaoImpl:28 - Created a new user in the db
2021-04-17 17:17:11 DEBUG TransactionImpl:98 - committing
2021-04-17 17:17:11 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:17:11 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:17:11 DEBUG Collections:196 - Collection found: [base.model.User.postLikes#1], was: [<unreferenced>] (initialized)
2021-04-17 17:17:11 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [<unreferenced>] (initialized)
2021-04-17 17:17:11 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-17 17:17:11 DEBUG AbstractFlushingEventListener:121 - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2021-04-17 17:17:11 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:17:11 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[], avatar=, loginStatus=false, userId=1, email=able@email.com, postLikes=[], username=able}
2021-04-17 17:17:28 INFO  SessionController:53 - In login method
2021-04-17 17:17:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:17:28 DEBUG TransactionImpl:81 - begin
2021-04-17 17:17:28 INFO  UserService:100 - In encryptPass method
2021-04-17 17:17:28 DEBUG TransactionImpl:98 - committing
2021-04-17 17:17:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:17:28 DEBUG TransactionImpl:81 - begin
2021-04-17 17:17:29 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4c9d3b69
2021-04-17 17:17:29 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from base.model.User WHERE email = 'able@email.com' AND password = 'gU6TORHje1wUnWMzkd4/cw=='
2021-04-17 17:17:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-17 17:17:29 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'base'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'email'
          |  \-[QUOTED_STRING] Node: ''able@email.com''
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[QUOTED_STRING] Node: ''gU6TORHje1wUnWMzkd4/cw==''

2021-04-17 17:17:29 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-04-17 17:17:29 DEBUG FromElement:153 - FromClause{level=1} : base.model.User (<no alias>) -> user0_
2021-04-17 17:17:29 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-04-17 17:17:29 DEBUG DotNode:696 - getDataType() : email -> org.hibernate.type.StringType@6d5832db
2021-04-17 17:17:29 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.email -> user0_.user_email
2021-04-17 17:17:29 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-04-17 17:17:29 DEBUG DotNode:696 - getDataType() : password -> org.hibernate.type.StringType@6d5832db
2021-04-17 17:17:29 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.password -> user0_.user_password
2021-04-17 17:17:29 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-04-17 17:17:29 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} Users user0_ ) ( WHERE ( AND ( = ( user0_.user_email {synthetic-alias} email ) 'able@email.com' ) ( = ( user0_.user_password {synthetic-alias} password ) 'gU6TORHje1wUnWMzkd4/cw==' ) ) ) )
2021-04-17 17:17:29 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-04-17 17:17:29 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(base.model.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(base.model.User)
          |  | path: {synthetic-alias}.email
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(base.model.User)
          |  |  | originalText: {synthetic-alias}
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: email
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(base.model.User)
             | path: {synthetic-alias}.password
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(base.model.User)
             |  | originalText: {synthetic-alias}
             |  \-IdentNode
             |    persister: null
             |    originalText: password
             \-LiteralNode

2021-04-17 17:17:29 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-04-17 17:17:29 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-04-17 17:17:29 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=base.model.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=base.model.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.user_email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path={synthetic-alias}.email,tableAlias=user0_,className=base.model.User,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'email' {originalText=email}
          |  \-[QUOTED_STRING] LiteralNode: ''able@email.com''
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.user_password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=user0_,className=base.model.User,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[QUOTED_STRING] LiteralNode: ''gU6TORHje1wUnWMzkd4/cw==''

2021-04-17 17:17:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-17 17:17:29 DEBUG QueryTranslatorImpl:258 - HQL: from base.model.User WHERE email = 'able@email.com' AND password = 'gU6TORHje1wUnWMzkd4/cw=='
2021-04-17 17:17:29 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_ where user0_.user_email='able@email.com' and user0_.user_password='gU6TORHje1wUnWMzkd4/cw=='
2021-04-17 17:17:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-17 17:17:29 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_ where user0_.user_email='able@email.com' and user0_.user_password='gU6TORHje1wUnWMzkd4/cw=='
2021-04-17 17:17:30 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:17:30 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:30 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:17:30 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:17:30 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:17:30 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:17:30 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:17:30 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:17:30 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:17:30 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:17:30 INFO  UserDaoImpl:79 - Got user from db
2021-04-17 17:17:30 DEBUG TransactionImpl:98 - committing
2021-04-17 17:17:30 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:17:30 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:17:30 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:17:30 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:17:30 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-17 17:17:30 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2021-04-17 17:17:30 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:17:30 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[], avatar=, loginStatus=false, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:17:30 INFO  SessionController:58 - Found matching user for able@email.com
2021-04-17 17:17:30 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:17:30 DEBUG TransactionImpl:81 - begin
2021-04-17 17:17:30 INFO  UserDaoImpl:40 - Updated user ID1 in the db
2021-04-17 17:17:30 DEBUG TransactionImpl:98 - committing
2021-04-17 17:17:30 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:17:30 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:17:30 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:17:30 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:17:30 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-04-17 17:17:30 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2021-04-17 17:17:30 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:17:30 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:17:30 DEBUG SQL:144 - update Users set user_avatar=?, user_email=?, user_fname=?, user_lname=?, loggedin=?, user_password=?, description=?, user_username=? where user_id=?
2021-04-17 17:17:31 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:17:31 INFO  UserController:36 - In getAllFriends call
2021-04-17 17:17:31 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:17:31 DEBUG TransactionImpl:81 - begin
2021-04-17 17:17:31 INFO  PostController:34 - In getAllPosts method
2021-04-17 17:17:31 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:17:31 DEBUG TransactionImpl:81 - begin
2021-04-17 17:17:31 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:17:31 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:17:31 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:17:31 DEBUG QueryTranslatorImpl:292 - parse() - HQL: FROM base.model.Post ORDER BY post_submitted DESC
2021-04-17 17:17:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-17 17:17:31 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'base'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Post'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'post_submitted'
       \-[DESCENDING] Node: 'DESC'

2021-04-17 17:17:31 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-04-17 17:17:31 DEBUG FromElement:153 - FromClause{level=1} : base.model.Post (<no alias>) -> post0_
2021-04-17 17:17:31 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-04-17 17:17:31 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} User_Post post0_ ) ( ORDER post_submitted DESC ) )
2021-04-17 17:17:31 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-04-17 17:17:31 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [User_Post]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(base.model.Post)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-OrderByClause
       +-IdentNode
       | persister: null
       | originalText: post_submitted
       \-SqlNode

2021-04-17 17:17:31 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from base.model.User
2021-04-17 17:17:31 DEBUG JoinProcessor:304 - Using FROM fragment [User_Post post0_]
2021-04-17 17:17:31 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-04-17 17:17:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-17 17:17:31 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User_Post)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'post0_.post_id as post_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User_Post,tableAlias=post0_,origin=null,columns={,className=base.model.Post}}}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User_Post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User_Post,tableAlias=post0_,origin=null,columns={,className=base.model.Post}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[IDENT] IdentNode: 'post_submitted' {originalText=post_submitted}
       \-[DESCENDING] SqlNode: 'DESC'

2021-04-17 17:17:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-17 17:17:31 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'base'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'User'

2021-04-17 17:17:31 DEBUG QueryTranslatorImpl:258 - HQL: FROM base.model.Post ORDER BY post_submitted DESC
2021-04-17 17:17:31 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-04-17 17:17:31 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-17 17:17:31 DEBUG FromElement:153 - FromClause{level=1} : base.model.User (<no alias>) -> user0_
2021-04-17 17:17:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-17 17:17:31 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-04-17 17:17:31 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} Users user0_ ) )
2021-04-17 17:17:31 DEBUG SQL:144 - select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-17 17:17:31 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-04-17 17:17:31 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(base.model.User)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-04-17 17:17:31 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-04-17 17:17:31 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-04-17 17:17:31 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=base.model.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=base.model.User}}

2021-04-17 17:17:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-17 17:17:31 DEBUG QueryTranslatorImpl:258 - HQL: from base.model.User
2021-04-17 17:17:31 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:17:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-17 17:17:31 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:17:31 INFO  PostDaoImpl:49 - Got all posts in db
2021-04-17 17:17:31 DEBUG TransactionImpl:98 - committing
2021-04-17 17:17:31 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:17:31 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:17:31 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:17:31 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:17:31 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:31 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:17:31 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:31 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:17:31 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:31 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:17:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:17:32 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:17:32 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:17:32 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:17:32 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:17:32 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:17:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:17:32 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 17:17:32 DEBUG TransactionImpl:98 - committing
2021-04-17 17:17:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:17:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:17:32 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:17:32 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:17:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-17 17:17:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2021-04-17 17:17:32 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:17:32 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:17:32 INFO  UserController:36 - In getAllFriends call
2021-04-17 17:17:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:17:32 DEBUG TransactionImpl:81 - begin
2021-04-17 17:17:32 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:17:32 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:17:32 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:17:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:17:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:17:32 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:17:33 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:17:33 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:17:33 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:17:33 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:17:33 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:17:33 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 17:17:33 DEBUG TransactionImpl:98 - committing
2021-04-17 17:17:33 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:17:33 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:17:33 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:17:33 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:17:33 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-17 17:17:33 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2021-04-17 17:17:33 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:17:33 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:18:26 INFO  PostController:50 - In createNewPost method
2021-04-17 17:18:26 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:18:26 DEBUG TransactionImpl:81 - begin
2021-04-17 17:18:27 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-17 17:18:27 DEBUG SQL:144 - insert into User_Post (post_description, media, post_submitted, user_id) values (?, ?, ?, ?)
2021-04-17 17:18:27 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-04-17 17:18:27 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-17 17:18:27 INFO  PostDaoImpl:33 - Saved post to db
2021-04-17 17:18:27 DEBUG TransactionImpl:98 - committing
2021-04-17 17:18:27 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:18:27 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:18:27 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [<unreferenced>] (initialized)
2021-04-17 17:18:27 DEBUG Collections:196 - Collection found: [base.model.Post.users#1], was: [<unreferenced>] (initialized)
2021-04-17 17:18:27 DEBUG Collections:196 - Collection found: [base.model.User.postLikes#1], was: [<unreferenced>] (initialized)
2021-04-17 17:18:27 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [<unreferenced>] (initialized)
2021-04-17 17:18:27 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2021-04-17 17:18:27 DEBUG AbstractFlushingEventListener:121 - Flushed: 4 (re)creations, 0 updates, 2 removals to 4 collections
2021-04-17 17:18:27 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:18:27 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=Sat Apr 17 17:18:27 PDT 2021, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=[]}
2021-04-17 17:18:27 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=[], username=able}
2021-04-17 17:18:27 DEBUG SQL:144 - update Users set user_avatar=?, user_email=?, user_fname=?, user_lname=?, loggedin=?, user_password=?, description=?, user_username=? where user_id=?
2021-04-17 17:18:27 DEBUG AbstractCollectionPersister:1299 - Inserting collection: [base.model.Post.users#1]
2021-04-17 17:18:27 DEBUG AbstractCollectionPersister:1388 - Collection was empty
2021-04-17 17:18:27 INFO  PhotoController:37 - In uploadPhoto method
2021-04-17 17:18:27 INFO  PhotoController:54 - tempfile for Big-Sur-CA.jpg stored with new name: post_1
2021-04-17 17:18:27 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:18:27 DEBUG TransactionImpl:81 - begin
2021-04-17 17:18:28 INFO  PhotoService:62 - Calling uploadPhoto service
2021-04-17 17:18:28 INFO  PhotoDaoImpl:144 - No arg constructor called for PhotoDaoImpl
2021-04-17 17:18:28 INFO  PhotoService:84 - Creating S3 client
2021-04-17 17:18:30 INFO  PhotoDaoImpl:50 - Deleted old photo if it existed
2021-04-17 17:18:32 INFO  PhotoDaoImpl:54 - Added new photo to aws S3
2021-04-17 17:18:32 DEBUG TransactionImpl:98 - committing
2021-04-17 17:18:32 INFO  PhotoController:67 - tempfile for post_1 deleted
2021-04-17 17:18:32 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:18:32 INFO  UserController:36 - In getAllFriends call
2021-04-17 17:18:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:18:32 DEBUG TransactionImpl:81 - begin
2021-04-17 17:18:32 INFO  PostController:34 - In getAllPosts method
2021-04-17 17:18:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:18:32 DEBUG TransactionImpl:81 - begin
2021-04-17 17:18:32 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:18:32 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:18:32 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:18:33 DEBUG SQL:144 - select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-17 17:18:33 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:18:33 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:18:33 DEBUG Loader:1593 - Result row: EntityKey[base.model.Post#1]
2021-04-17 17:18:33 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:18:33 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:18:33 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:18:33 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:18:33 DEBUG SQL:144 - select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-17 17:18:33 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:18:33 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:18:33 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:18:33 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:18:33 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:18:33 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:18:33 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 17:18:33 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 17:18:33 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-17 17:18:33 DEBUG CollectionReferenceInitializerImpl:93 - Result set contains (possibly empty) collection: [base.model.Post.photoList#1]
2021-04-17 17:18:33 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:18:33 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:18:33 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:18:33 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:18:33 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:18:33 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:18:33 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:18:33 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : base.model.User#1
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:33 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:18:33 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.users#1]
2021-04-17 17:18:33 DEBUG SQL:144 - select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-17 17:18:33 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 17:18:33 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:18:33 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:18:33 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:18:33 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:18:33 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 17:18:33 DEBUG TransactionImpl:98 - committing
2021-04-17 17:18:33 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:18:33 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:18:33 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:18:33 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:18:33 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:18:33 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 17:18:33 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:18:33 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:18:33 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:18:33 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 17:18:33 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:18:33 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.users#1]
2021-04-17 17:18:33 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.users
2021-04-17 17:18:33 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.users#1]
2021-04-17 17:18:33 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.users
2021-04-17 17:18:33 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:18:33 INFO  PostDaoImpl:49 - Got all posts in db
2021-04-17 17:18:33 DEBUG TransactionImpl:98 - committing
2021-04-17 17:18:33 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:18:33 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:18:33 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:18:33 DEBUG Collections:196 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (initialized)
2021-04-17 17:18:33 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:18:33 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:18:33 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:18:33 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:18:33 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:18:33 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=[]}
2021-04-17 17:18:33 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:18:33 INFO  UserController:36 - In getAllFriends call
2021-04-17 17:18:33 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:18:33 DEBUG TransactionImpl:81 - begin
2021-04-17 17:18:34 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:18:34 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:18:34 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:18:34 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:18:34 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:18:34 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:18:34 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:18:34 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:18:34 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:18:34 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:18:34 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:18:34 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:18:34 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 17:18:34 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 17:18:35 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 17:18:35 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:18:35 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:18:35 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:18:35 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:18:35 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 17:18:35 DEBUG TransactionImpl:98 - committing
2021-04-17 17:18:35 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:18:35 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:18:35 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:18:35 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:18:35 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:18:35 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 17:18:35 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:18:35 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:18:35 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:18:35 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 17:18:35 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:19:40 INFO  LikesController:24 - Calling likePost functionality
2021-04-17 17:19:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:19:40 DEBUG TransactionImpl:81 - begin
2021-04-17 17:19:41 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-17 17:19:41 DEBUG SQL:144 - insert into PostLikes (post_id, user_id) values (?, ?)
2021-04-17 17:19:41 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-04-17 17:19:41 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-17 17:19:41 INFO  LikesDaoImpl:26 - Added like from 1 to db
2021-04-17 17:19:41 DEBUG TransactionImpl:98 - committing
2021-04-17 17:19:41 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:19:41 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:19:41 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-17 17:19:41 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-17 17:19:41 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:19:41 DEBUG EntityPrinter:117 - base.model.Likes{likeId=1, postId=1, userId=1}
2021-04-17 17:24:54 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:24:54 INFO  UserController:36 - In getAllFriends call
2021-04-17 17:24:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:24:54 DEBUG TransactionImpl:81 - begin
2021-04-17 17:24:54 INFO  PostController:34 - In getAllPosts method
2021-04-17 17:24:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:24:54 DEBUG TransactionImpl:81 - begin
2021-04-17 17:24:54 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:24:54 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:24:54 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:24:55 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:24:55 DEBUG SQL:144 - select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-17 17:24:55 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:24:55 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:24:55 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG Loader:1593 - Result row: EntityKey[base.model.Post#1]
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:24:55 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG SQL:144 - select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-17 17:24:55 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:24:55 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:24:55 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:24:55 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:24:55 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:24:55 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:24:55 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 17:24:55 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 17:24:55 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-17 17:24:55 DEBUG CollectionReferenceInitializerImpl:93 - Result set contains (possibly empty) collection: [base.model.Post.photoList#1]
2021-04-17 17:24:55 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:24:55 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:24:55 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:24:55 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:24:55 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:24:55 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:24:55 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:24:55 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : base.model.User#1
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:55 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:24:55 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.users#1]
2021-04-17 17:24:55 DEBUG SQL:144 - select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-17 17:24:55 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 17:24:55 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.users#1]
2021-04-17 17:24:55 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:24:55 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:24:55 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:24:55 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:24:55 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 17:24:55 DEBUG TransactionImpl:98 - committing
2021-04-17 17:24:55 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:24:55 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:24:55 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.Post.users#1]
2021-04-17 17:24:55 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:24:55 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:24:55 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.users
2021-04-17 17:24:55 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.users#1]
2021-04-17 17:24:55 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.users
2021-04-17 17:24:55 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:24:55 INFO  PostDaoImpl:49 - Got all posts in db
2021-04-17 17:24:55 DEBUG TransactionImpl:98 - committing
2021-04-17 17:24:55 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:24:55 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:24:55 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:24:55 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 17:24:55 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:24:55 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:24:55 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:24:55 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:24:55 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 17:24:55 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:24:55 DEBUG Collections:196 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (initialized)
2021-04-17 17:24:55 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:24:55 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:24:55 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:24:55 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:24:55 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:24:55 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=[base.model.User#1]}
2021-04-17 17:24:55 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:24:55 INFO  UserController:36 - In getAllFriends call
2021-04-17 17:24:55 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:24:55 DEBUG TransactionImpl:81 - begin
2021-04-17 17:24:56 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:24:56 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:24:56 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:24:56 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:24:56 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:24:56 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:24:56 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:24:56 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:24:56 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:24:56 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:24:56 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:24:56 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:24:56 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 17:24:56 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 17:24:56 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 17:24:56 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:24:56 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:24:56 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:24:56 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:24:56 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 17:24:56 DEBUG TransactionImpl:98 - committing
2021-04-17 17:24:56 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:24:56 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:24:56 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:24:56 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:24:56 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:24:56 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 17:24:56 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:24:56 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:24:56 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:24:56 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 17:24:56 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:25:23 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:25:23 INFO  UserController:36 - In getAllFriends call
2021-04-17 17:25:23 INFO  PostController:34 - In getAllPosts method
2021-04-17 17:25:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:25:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:25:23 DEBUG TransactionImpl:81 - begin
2021-04-17 17:25:23 DEBUG TransactionImpl:81 - begin
2021-04-17 17:25:23 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:25:23 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:25:23 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:25:24 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:25:24 DEBUG SQL:144 - select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-17 17:25:24 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:25:24 DEBUG Loader:1593 - Result row: EntityKey[base.model.Post#1]
2021-04-17 17:25:24 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:25:24 DEBUG SQL:144 - select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:25:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:25:24 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:25:24 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-17 17:25:24 DEBUG CollectionReferenceInitializerImpl:93 - Result set contains (possibly empty) collection: [base.model.Post.photoList#1]
2021-04-17 17:25:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:25:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:25:24 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:25:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:25:24 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : base.model.User#1
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.users#1]
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:25:24 DEBUG SQL:144 - select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:24 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:25:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:25:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:25:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 17:25:24 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 17:25:24 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.users#1]
2021-04-17 17:25:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.Post.users#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.users
2021-04-17 17:25:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.users#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.users
2021-04-17 17:25:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:25:24 INFO  PostDaoImpl:49 - Got all posts in db
2021-04-17 17:25:24 DEBUG TransactionImpl:98 - committing
2021-04-17 17:25:24 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:25:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:25:24 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:25:24 DEBUG Collections:196 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (initialized)
2021-04-17 17:25:24 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:25:24 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:25:24 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:25:24 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:25:24 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:25:24 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=[base.model.User#1]}
2021-04-17 17:25:24 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:25:24 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:25:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:25:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:25:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:25:24 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 17:25:24 DEBUG TransactionImpl:98 - committing
2021-04-17 17:25:24 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:25:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:25:24 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:25:24 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:25:24 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:25:24 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 17:25:24 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:25:24 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:25:24 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:25:24 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 17:25:24 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:25:24 INFO  UserController:36 - In getAllFriends call
2021-04-17 17:25:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:25:24 DEBUG TransactionImpl:81 - begin
2021-04-17 17:25:25 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:25:25 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:25:25 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:25:25 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:25:25 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:25:25 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:25:25 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:25:25 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:25:25 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:25:25 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:25:25 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:25:25 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:25:25 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 17:25:25 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 17:25:25 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 17:25:25 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:25:25 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:25:25 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:25:25 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:25:25 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 17:25:25 DEBUG TransactionImpl:98 - committing
2021-04-17 17:25:25 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:25:25 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:25:25 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:25:25 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:25:25 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:25:25 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 17:25:25 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:25:25 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:25:25 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:25:25 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 17:25:25 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:26:17 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:26:17 INFO  UserController:36 - In getAllFriends call
2021-04-17 17:26:17 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:26:17 DEBUG TransactionImpl:81 - begin
2021-04-17 17:26:17 INFO  PostController:34 - In getAllPosts method
2021-04-17 17:26:17 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:26:17 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:26:17 DEBUG TransactionImpl:81 - begin
2021-04-17 17:26:17 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:26:17 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 17:26:18 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:26:18 DEBUG SQL:144 - select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-17 17:26:18 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:26:18 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:26:18 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:26:18 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:26:18 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:26:18 DEBUG Loader:1593 - Result row: EntityKey[base.model.Post#1]
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG SQL:144 - select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-17 17:26:18 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:26:18 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:26:18 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:26:18 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:26:18 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:26:18 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:26:18 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 17:26:18 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 17:26:18 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-17 17:26:18 DEBUG CollectionReferenceInitializerImpl:93 - Result set contains (possibly empty) collection: [base.model.Post.photoList#1]
2021-04-17 17:26:18 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:26:18 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:26:18 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:26:18 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:26:18 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:26:18 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:26:18 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:26:18 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : base.model.User#1
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:18 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:26:18 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.users#1]
2021-04-17 17:26:18 DEBUG SQL:144 - select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-17 17:26:18 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 17:26:18 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:26:18 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:26:18 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:26:18 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:26:18 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 17:26:18 DEBUG TransactionImpl:98 - committing
2021-04-17 17:26:18 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:26:18 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:26:18 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:26:18 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:26:18 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:26:18 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 17:26:18 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:26:18 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:26:18 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:26:18 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 17:26:18 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:26:18 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.users#1]
2021-04-17 17:26:18 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.Post.users#1]
2021-04-17 17:26:18 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.users
2021-04-17 17:26:18 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.users#1]
2021-04-17 17:26:18 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.users
2021-04-17 17:26:18 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:26:18 INFO  PostDaoImpl:49 - Got all posts in db
2021-04-17 17:26:18 DEBUG TransactionImpl:98 - committing
2021-04-17 17:26:18 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:26:18 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:26:18 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:26:18 DEBUG Collections:196 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (initialized)
2021-04-17 17:26:18 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:26:18 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:26:18 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:26:18 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:26:18 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:26:18 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=[base.model.User#1]}
2021-04-17 17:26:18 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 17:26:18 INFO  UserController:36 - In getAllFriends call
2021-04-17 17:26:18 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 17:26:18 DEBUG TransactionImpl:81 - begin
2021-04-17 17:26:19 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 17:26:19 DEBUG Loader:384 - Result set row: 0
2021-04-17 17:26:19 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:19 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 17:26:19 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 17:26:19 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 17:26:20 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 17:26:20 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 17:26:20 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 17:26:20 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 17:26:20 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 17:26:20 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 17:26:20 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:26:20 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 17:26:20 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 17:26:20 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 17:26:20 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 17:26:20 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 17:26:20 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 17:26:20 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 17:26:20 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 17:26:20 DEBUG TransactionImpl:98 - committing
2021-04-17 17:26:20 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 17:26:20 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 17:26:20 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 17:26:20 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 17:26:20 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 17:26:20 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 17:26:20 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 17:26:20 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 17:26:20 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 17:26:20 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 17:26:20 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 19:11:29 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 19:11:29 INFO  UserController:36 - In getAllFriends call
2021-04-17 19:11:29 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 19:11:29 DEBUG TransactionImpl:81 - begin
2021-04-17 19:11:29 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 19:11:29 INFO  PostController:34 - In getAllPosts method
2021-04-17 19:11:29 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 19:11:29 DEBUG TransactionImpl:81 - begin
2021-04-17 19:11:29 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 19:11:29 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 19:11:29 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 19:11:29 DEBUG SQL:144 - select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-17 19:11:30 DEBUG Loader:384 - Result set row: 0
2021-04-17 19:11:30 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 19:11:30 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 19:11:30 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 19:11:30 DEBUG Loader:384 - Result set row: 0
2021-04-17 19:11:30 DEBUG Loader:1593 - Result row: EntityKey[base.model.Post#1]
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG SQL:144 - select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-17 19:11:30 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 19:11:30 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 19:11:30 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 19:11:30 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 19:11:30 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 19:11:30 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 19:11:30 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 19:11:30 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 19:11:30 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-17 19:11:30 DEBUG CollectionReferenceInitializerImpl:93 - Result set contains (possibly empty) collection: [base.model.Post.photoList#1]
2021-04-17 19:11:30 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 19:11:30 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 19:11:30 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 19:11:30 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 19:11:30 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 19:11:30 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 19:11:30 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 19:11:30 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : base.model.User#1
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:30 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 19:11:30 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.users#1]
2021-04-17 19:11:30 DEBUG SQL:144 - select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-17 19:11:30 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 19:11:30 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 19:11:30 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 19:11:30 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 19:11:30 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 19:11:30 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 19:11:30 DEBUG TransactionImpl:98 - committing
2021-04-17 19:11:30 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 19:11:30 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 19:11:30 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 19:11:30 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 19:11:30 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 19:11:30 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 19:11:30 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 19:11:30 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 19:11:30 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 19:11:30 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 19:11:30 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 19:11:30 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.users#1]
2021-04-17 19:11:30 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.Post.users#1]
2021-04-17 19:11:30 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.users
2021-04-17 19:11:30 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.users#1]
2021-04-17 19:11:30 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.users
2021-04-17 19:11:30 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 19:11:30 INFO  PostDaoImpl:49 - Got all posts in db
2021-04-17 19:11:30 DEBUG TransactionImpl:98 - committing
2021-04-17 19:11:30 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 19:11:30 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 19:11:30 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 19:11:30 DEBUG Collections:196 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (initialized)
2021-04-17 19:11:30 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 19:11:30 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 19:11:30 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 19:11:30 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 19:11:30 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 19:11:30 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=[base.model.User#1]}
2021-04-17 19:11:30 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 19:11:30 INFO  UserController:36 - In getAllFriends call
2021-04-17 19:11:30 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 19:11:30 DEBUG TransactionImpl:81 - begin
2021-04-17 19:11:31 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 19:11:31 DEBUG Loader:384 - Result set row: 0
2021-04-17 19:11:31 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:31 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 19:11:31 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 19:11:31 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 19:11:32 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 19:11:32 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 19:11:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 19:11:32 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 19:11:32 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 19:11:32 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 19:11:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 19:11:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 19:11:32 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 19:11:32 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 19:11:32 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 19:11:32 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 19:11:32 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 19:11:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 19:11:32 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 19:11:32 DEBUG TransactionImpl:98 - committing
2021-04-17 19:11:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 19:11:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 19:11:32 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 19:11:32 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 19:11:32 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 19:11:32 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 19:11:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 19:11:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 19:11:32 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 19:11:32 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 19:11:32 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 19:37:22 INFO  UserController:36 - In getAllFriends call
2021-04-17 19:37:22 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 19:37:22 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 19:37:22 DEBUG TransactionImpl:81 - begin
2021-04-17 19:37:22 INFO  PostController:34 - In getAllPosts method
2021-04-17 19:37:22 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 19:37:22 DEBUG TransactionImpl:81 - begin
2021-04-17 19:37:22 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 19:37:22 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 19:37:22 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 19:37:23 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 19:37:23 DEBUG SQL:144 - select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-17 19:37:23 DEBUG Loader:384 - Result set row: 0
2021-04-17 19:37:23 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG Loader:384 - Result set row: 0
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG Loader:1593 - Result row: EntityKey[base.model.Post#1]
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 19:37:23 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 19:37:23 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG SQL:144 - select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-17 19:37:23 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 19:37:23 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 19:37:23 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 19:37:23 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 19:37:23 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 19:37:23 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 19:37:23 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 19:37:23 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 19:37:23 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-17 19:37:23 DEBUG CollectionReferenceInitializerImpl:93 - Result set contains (possibly empty) collection: [base.model.Post.photoList#1]
2021-04-17 19:37:23 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 19:37:23 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 19:37:23 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 19:37:23 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 19:37:23 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 19:37:23 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 19:37:23 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 19:37:23 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : base.model.User#1
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:23 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 19:37:23 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.users#1]
2021-04-17 19:37:23 DEBUG SQL:144 - select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-17 19:37:23 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 19:37:23 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 19:37:23 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 19:37:23 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 19:37:23 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 19:37:23 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 19:37:23 DEBUG TransactionImpl:98 - committing
2021-04-17 19:37:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 19:37:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 19:37:23 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 19:37:23 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 19:37:23 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 19:37:23 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 19:37:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 19:37:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 19:37:23 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 19:37:23 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 19:37:23 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 19:37:23 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.users#1]
2021-04-17 19:37:23 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.Post.users#1]
2021-04-17 19:37:23 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.users
2021-04-17 19:37:23 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.users#1]
2021-04-17 19:37:23 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.users
2021-04-17 19:37:23 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 19:37:23 INFO  PostDaoImpl:49 - Got all posts in db
2021-04-17 19:37:23 DEBUG TransactionImpl:98 - committing
2021-04-17 19:37:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 19:37:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 19:37:23 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 19:37:23 DEBUG Collections:196 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (initialized)
2021-04-17 19:37:23 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 19:37:23 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 19:37:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 19:37:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 19:37:23 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 19:37:23 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=[base.model.User#1]}
2021-04-17 19:37:23 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 19:37:23 INFO  UserController:36 - In getAllFriends call
2021-04-17 19:37:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 19:37:23 DEBUG TransactionImpl:81 - begin
2021-04-17 19:37:24 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 19:37:24 DEBUG Loader:384 - Result set row: 0
2021-04-17 19:37:24 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 19:37:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 19:37:24 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 19:37:24 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 19:37:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 19:37:24 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 19:37:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 19:37:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 19:37:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 19:37:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 19:37:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 19:37:24 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 19:37:24 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 19:37:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 19:37:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 19:37:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 19:37:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 19:37:24 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 19:37:24 DEBUG TransactionImpl:98 - committing
2021-04-17 19:37:24 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 19:37:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 19:37:24 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 19:37:24 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 19:37:24 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 19:37:24 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 19:37:24 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 19:37:24 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 19:37:24 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 19:37:24 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 19:37:24 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 22:36:10 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 22:36:10 INFO  UserController:36 - In getAllFriends call
2021-04-17 22:36:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 22:36:10 DEBUG TransactionImpl:81 - begin
2021-04-17 22:36:10 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 22:36:10 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 22:36:10 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 22:36:10 INFO  PostController:34 - In getAllPosts method
2021-04-17 22:36:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 22:36:10 DEBUG TransactionImpl:81 - begin
2021-04-17 22:36:11 DEBUG SQL:144 - select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-17 22:36:11 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 22:36:11 DEBUG Loader:384 - Result set row: 0
2021-04-17 22:36:11 DEBUG Loader:1593 - Result row: EntityKey[base.model.Post#1]
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG SQL:144 - select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-17 22:36:11 DEBUG Loader:384 - Result set row: 0
2021-04-17 22:36:11 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 22:36:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 22:36:11 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 22:36:11 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-17 22:36:11 DEBUG CollectionReferenceInitializerImpl:93 - Result set contains (possibly empty) collection: [base.model.Post.photoList#1]
2021-04-17 22:36:11 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 22:36:11 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 22:36:11 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 22:36:11 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 22:36:11 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 22:36:11 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 22:36:11 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 22:36:11 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : base.model.User#1
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 22:36:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.users#1]
2021-04-17 22:36:11 DEBUG SQL:144 - select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-17 22:36:11 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 22:36:11 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 22:36:11 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 22:36:11 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 22:36:11 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 22:36:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 22:36:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 22:36:11 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 22:36:11 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.users#1]
2021-04-17 22:36:11 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.Post.users#1]
2021-04-17 22:36:11 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.users
2021-04-17 22:36:11 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.users#1]
2021-04-17 22:36:11 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.users
2021-04-17 22:36:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 22:36:11 INFO  PostDaoImpl:49 - Got all posts in db
2021-04-17 22:36:11 DEBUG TransactionImpl:98 - committing
2021-04-17 22:36:11 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 22:36:11 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 22:36:11 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 22:36:11 DEBUG Collections:196 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (initialized)
2021-04-17 22:36:11 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 22:36:11 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 22:36:11 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 22:36:11 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 22:36:11 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 22:36:11 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=[base.model.User#1]}
2021-04-17 22:36:11 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 22:36:11 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 22:36:11 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 22:36:11 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 22:36:11 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 22:36:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 22:36:11 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 22:36:11 DEBUG TransactionImpl:98 - committing
2021-04-17 22:36:11 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 22:36:11 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 22:36:11 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 22:36:11 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 22:36:11 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 22:36:11 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 22:36:11 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 22:36:11 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 22:36:11 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 22:36:11 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 22:36:11 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 22:36:11 INFO  UserController:36 - In getAllFriends call
2021-04-17 22:36:11 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 22:36:11 DEBUG TransactionImpl:81 - begin
2021-04-17 22:36:12 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 22:36:12 DEBUG Loader:384 - Result set row: 0
2021-04-17 22:36:12 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 22:36:12 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 22:36:12 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 22:36:12 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 22:36:12 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 22:36:12 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 22:36:12 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 22:36:12 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 22:36:12 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 22:36:12 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 22:36:12 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 22:36:12 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 22:36:12 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 22:36:12 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 22:36:12 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 22:36:12 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 22:36:12 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 22:36:12 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 22:36:12 DEBUG TransactionImpl:98 - committing
2021-04-17 22:36:12 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 22:36:12 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 22:36:12 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 22:36:12 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 22:36:12 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 22:36:12 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 22:36:12 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 22:36:12 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 22:36:12 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 22:36:12 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 22:36:12 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 23:08:09 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 23:08:09 INFO  UserController:36 - In getAllFriends call
2021-04-17 23:08:09 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 23:08:09 DEBUG TransactionImpl:81 - begin
2021-04-17 23:08:09 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 23:08:09 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 23:08:09 INFO  PostController:34 - In getAllPosts method
2021-04-17 23:08:09 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 23:08:09 DEBUG TransactionImpl:81 - begin
2021-04-17 23:08:09 INFO  SessionController:34 - In getCurrentUser method
2021-04-17 23:08:10 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 23:08:10 DEBUG SQL:144 - select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-17 23:08:10 DEBUG Loader:384 - Result set row: 0
2021-04-17 23:08:10 DEBUG Loader:1593 - Result row: EntityKey[base.model.Post#1]
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG SQL:144 - select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-17 23:08:10 DEBUG Loader:384 - Result set row: 0
2021-04-17 23:08:10 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 23:08:10 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 23:08:10 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 23:08:10 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 23:08:10 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-17 23:08:10 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 23:08:10 DEBUG CollectionReferenceInitializerImpl:93 - Result set contains (possibly empty) collection: [base.model.Post.photoList#1]
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 23:08:10 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 23:08:10 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 23:08:10 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 23:08:10 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 23:08:10 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 23:08:10 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 23:08:10 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 23:08:10 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 23:08:10 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 23:08:10 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 23:08:10 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : base.model.User#1
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:10 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 23:08:10 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.users#1]
2021-04-17 23:08:10 DEBUG SQL:144 - select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-17 23:08:10 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 23:08:10 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 23:08:10 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 23:08:10 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 23:08:10 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 23:08:10 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 23:08:10 DEBUG TransactionImpl:98 - committing
2021-04-17 23:08:10 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 23:08:10 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 23:08:10 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 23:08:10 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 23:08:10 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 23:08:10 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 23:08:10 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 23:08:10 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 23:08:10 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 23:08:10 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 23:08:10 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 23:08:10 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.users#1]
2021-04-17 23:08:10 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.Post.users#1]
2021-04-17 23:08:10 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.users
2021-04-17 23:08:10 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.users#1]
2021-04-17 23:08:10 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.users
2021-04-17 23:08:10 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 23:08:10 INFO  PostDaoImpl:49 - Got all posts in db
2021-04-17 23:08:10 DEBUG TransactionImpl:98 - committing
2021-04-17 23:08:10 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 23:08:10 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 23:08:10 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 23:08:10 DEBUG Collections:196 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (initialized)
2021-04-17 23:08:10 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 23:08:10 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 23:08:10 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 23:08:10 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 23:08:10 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 23:08:10 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=[base.model.User#1]}
2021-04-17 23:08:10 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-17 23:08:10 INFO  UserController:36 - In getAllFriends call
2021-04-17 23:08:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-17 23:08:10 DEBUG TransactionImpl:81 - begin
2021-04-17 23:08:11 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-17 23:08:11 DEBUG Loader:384 - Result set row: 0
2021-04-17 23:08:11 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-17 23:08:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-17 23:08:11 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-17 23:08:11 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-17 23:08:11 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-17 23:08:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-17 23:08:11 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-17 23:08:11 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-17 23:08:11 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-17 23:08:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 23:08:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-17 23:08:11 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-17 23:08:11 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-17 23:08:11 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-17 23:08:11 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-17 23:08:11 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-17 23:08:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-17 23:08:11 INFO  UserDaoImpl:65 - Got all users from db
2021-04-17 23:08:11 DEBUG TransactionImpl:98 - committing
2021-04-17 23:08:11 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-17 23:08:11 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-17 23:08:11 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-17 23:08:11 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-17 23:08:11 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-17 23:08:11 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-17 23:08:11 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-17 23:08:11 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-17 23:08:11 DEBUG EntityPrinter:110 - Listing entities:
2021-04-17 23:08:11 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-17 23:08:11 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-18 07:25:38 INFO  SessionController:34 - In getCurrentUser method
2021-04-18 07:25:38 INFO  UserController:36 - In getAllFriends call
2021-04-18 07:25:38 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-18 07:25:38 DEBUG TransactionImpl:81 - begin
2021-04-18 07:25:38 INFO  PostController:34 - In getAllPosts method
2021-04-18 07:25:38 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-18 07:25:38 DEBUG TransactionImpl:81 - begin
2021-04-18 07:25:38 INFO  SessionController:34 - In getCurrentUser method
2021-04-18 07:25:38 INFO  SessionController:34 - In getCurrentUser method
2021-04-18 07:25:39 INFO  SessionController:34 - In getCurrentUser method
2021-04-18 07:25:39 DEBUG SQL:144 - select post0_.post_id as post_id1_2_, post0_.post_description as post_des2_2_, post0_.media as media3_2_, post0_.post_submitted as post_sub4_2_, post0_.user_id as user_id5_2_ from User_Post post0_ order by post_submitted DESC
2021-04-18 07:25:39 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-18 07:25:39 DEBUG Loader:384 - Result set row: 0
2021-04-18 07:25:39 DEBUG Loader:1593 - Result row: EntityKey[base.model.Post#1]
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG SQL:144 - select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-18 07:25:39 DEBUG Loader:384 - Result set row: 0
2021-04-18 07:25:39 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-18 07:25:39 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-18 07:25:39 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-18 07:25:39 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-18 07:25:39 DEBUG CollectionReferenceInitializerImpl:93 - Result set contains (possibly empty) collection: [base.model.Post.photoList#1]
2021-04-18 07:25:39 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-18 07:25:39 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-18 07:25:39 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-18 07:25:39 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-18 07:25:39 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-18 07:25:39 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-18 07:25:39 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-18 07:25:39 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : base.model.User#1
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:39 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.users#1]
2021-04-18 07:25:39 DEBUG SQL:144 - select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-18 07:25:39 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-18 07:25:39 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-18 07:25:39 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-18 07:25:39 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-18 07:25:39 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-18 07:25:39 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-18 07:25:39 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-18 07:25:39 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.users#1]
2021-04-18 07:25:39 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.Post.users#1]
2021-04-18 07:25:39 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.users
2021-04-18 07:25:39 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.users#1]
2021-04-18 07:25:39 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.users
2021-04-18 07:25:39 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-18 07:25:39 INFO  PostDaoImpl:49 - Got all posts in db
2021-04-18 07:25:39 DEBUG TransactionImpl:98 - committing
2021-04-18 07:25:39 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-18 07:25:39 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-18 07:25:39 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-18 07:25:39 DEBUG Collections:196 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (initialized)
2021-04-18 07:25:39 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-18 07:25:39 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-18 07:25:39 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-18 07:25:39 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-18 07:25:39 DEBUG EntityPrinter:110 - Listing entities:
2021-04-18 07:25:39 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=[base.model.User#1]}
2021-04-18 07:25:39 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-18 07:25:39 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-18 07:25:39 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-18 07:25:39 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-18 07:25:39 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-18 07:25:39 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-18 07:25:39 INFO  UserDaoImpl:65 - Got all users from db
2021-04-18 07:25:39 DEBUG TransactionImpl:98 - committing
2021-04-18 07:25:39 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-18 07:25:39 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-18 07:25:39 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-18 07:25:39 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-18 07:25:39 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-18 07:25:39 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-18 07:25:39 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-18 07:25:39 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-18 07:25:39 DEBUG EntityPrinter:110 - Listing entities:
2021-04-18 07:25:39 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-18 07:25:39 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-18 07:25:40 INFO  UserController:36 - In getAllFriends call
2021-04-18 07:25:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-18 07:25:40 DEBUG TransactionImpl:81 - begin
2021-04-18 07:25:40 DEBUG SQL:144 - select user0_.user_id as user_id1_3_, user0_.user_avatar as user_ava2_3_, user0_.user_email as user_ema3_3_, user0_.user_fname as user_fna4_3_, user0_.user_lname as user_lna5_3_, user0_.loggedin as loggedin6_3_, user0_.user_password as user_pas7_3_, user0_.description as descript8_3_, user0_.user_username as user_use9_3_ from Users user0_
2021-04-18 07:25:40 DEBUG Loader:384 - Result set row: 0
2021-04-18 07:25:40 DEBUG Loader:1593 - Result row: EntityKey[base.model.User#1]
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.User#1]
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `avatar` : value = 
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`avatar`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = able@email.com
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Able
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Able
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `loginStatus` : value = true
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`loginStatus`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = gU6TORHje1wUnWMzkd4/cw==
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postLikes` : value = NOT NULL COLLECTION
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`postLikes`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postList` : value = NOT NULL COLLECTION
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`postList`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `userDescription` : value = 
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`userDescription`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = able
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.User#1]
2021-04-18 07:25:40 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.User.postList#1]
2021-04-18 07:25:40 DEBUG SQL:144 - select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-18 07:25:40 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.User.postList#1]
2021-04-18 07:25:40 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [base.model.User.postList#1]
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [base.model.Post#1]
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = Ona Vaycay
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `media` : value = photo
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`media`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `photoList` : value = NOT NULL COLLECTION
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`photoList`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `submitted` : value = 2021-04-17 17:18:27.425
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `userId` : value = 1
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`userId`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:211 - Processing attribute `users` : value = NOT NULL COLLECTION
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:242 - Attribute (`users`)  - enhanced for lazy-loading? - false
2021-04-18 07:25:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [base.model.Post#1]
2021-04-18 07:25:40 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.User.postList
2021-04-18 07:25:40 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.User.postList#1]
2021-04-18 07:25:40 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.User.postList
2021-04-18 07:25:40 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-18 07:25:40 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [base.model.Post.photoList#1]
2021-04-18 07:25:40 DEBUG SQL:144 - select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-18 07:25:40 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [base.model.Post.photoList#1]
2021-04-18 07:25:40 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: base.model.Post.photoList
2021-04-18 07:25:40 DEBUG CollectionLoadContext:303 - Collection fully initialized: [base.model.Post.photoList#1]
2021-04-18 07:25:40 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: base.model.Post.photoList
2021-04-18 07:25:40 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-04-18 07:25:40 INFO  UserDaoImpl:65 - Got all users from db
2021-04-18 07:25:40 DEBUG TransactionImpl:98 - committing
2021-04-18 07:25:40 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-18 07:25:40 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-18 07:25:40 DEBUG Collections:213 - Collection found: [base.model.User.postLikes#1], was: [base.model.User.postLikes#1] (uninitialized)
2021-04-18 07:25:40 DEBUG Collections:196 - Collection found: [base.model.User.postList#1], was: [base.model.User.postList#1] (initialized)
2021-04-18 07:25:40 DEBUG Collections:196 - Collection found: [base.model.Post.photoList#1], was: [base.model.Post.photoList#1] (initialized)
2021-04-18 07:25:40 DEBUG Collections:213 - Collection found: [base.model.Post.users#1], was: [base.model.Post.users#1] (uninitialized)
2021-04-18 07:25:40 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-04-18 07:25:40 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-04-18 07:25:40 DEBUG EntityPrinter:110 - Listing entities:
2021-04-18 07:25:40 DEBUG EntityPrinter:117 - base.model.Post{photoList=[], submitted=2021-04-17 17:18:27.425, description=Ona Vaycay, postId=1, media=photo, userId=base.model.User#1, users=<uninitialized>}
2021-04-18 07:25:40 DEBUG EntityPrinter:117 - base.model.User{fname=Able, lname=Able, password=gU6TORHje1wUnWMzkd4/cw==, userDescription=, postList=[base.model.Post#1], avatar=, loginStatus=true, userId=1, email=able@email.com, postLikes=<uninitialized>, username=able}
2021-04-18 11:41:41 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-18 11:41:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-18 11:41:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-18 11:41:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-18 11:41:41 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-04-18 11:41:41 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-18 11:41:41 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-04-18 11:41:41 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-18 11:41:41 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-18 11:41:41 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-18 11:41:41 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-18 11:41:42 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@27f98d67
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@27f98d67
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27f98d67
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6705de13
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@56cb884a
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@369be0b3
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6142dea8
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6142dea8
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6142dea8
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5eb0f505
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5eb0f505
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5eb0f505
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@418c67f0
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@418c67f0
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@418c67f0
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@5b20f9fa
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@5b20f9fa
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b20f9fa
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@54da33a8
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@54da33a8
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54da33a8
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6811a286
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6811a286
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6811a286
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@51f5c371
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@51f5c371
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51f5c371
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a53259b
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a53259b
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d3026b9
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d3026b9
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@6d5832db
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6d5832db
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@319d7873
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3781f959
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@7b3818f6
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b3818f6
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@5910d02e
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5910d02e
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@2a8a3c10
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2a8a3c10
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d2d23e
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d2d23e
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d0e3120
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d0e3120
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@12ad11af
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@12ad11af
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@640cbd7d
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@640cbd7d
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24bdb303
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24bdb303
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5901612e
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5901612e
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@fc53642
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@fc53642
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@5a08b2a
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a08b2a
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@432bfbb5
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@432bfbb5
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@432bfbb5
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65d3e9be
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@d769b48
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@d769b48
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@d769b48
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@25204ec9
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@75f40ba2
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@76ad99e5
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@76ad99e5
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3099dc06
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3099dc06
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3367b72a
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3367b72a
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@d24b0bd
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d24b0bd
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@23268c73
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@23268c73
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b798b5d
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@205f53a5
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@205f53a5
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@205f53a5
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ca06d8f
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ca06d8f
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ca06d8f
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@24407538
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2fe1c7d9
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@383c40a2
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@383c40a2
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@383c40a2
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b3cc3ab
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b3cc3ab
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b3cc3ab
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@34be1401
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4cf0606b
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2094411
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2094411
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f4ae251
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@7282af20
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7282af20
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@290973b2
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@290973b2
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25faeb0d
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24e6149d
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@45e4128c
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@1d986e12
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d986e12
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d24f1ef
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2392f8a7
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58dad0cb
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13c3c82a
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49b2f834
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7dd16665
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7383bd9c
2021-04-18 11:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e8ca95e
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-18 11:41:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-18 11:41:43 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-04-18 11:41:43 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.19
      major : 42
      minor : 2
2021-04-18 11:41:43 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-18 11:41:44 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL82Dialect
2021-04-18 11:41:44 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-18 11:41:44 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-18 11:41:44 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@274209e7
2021-04-18 11:41:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@274209e7
2021-04-18 11:41:44 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@23268c73
2021-04-18 11:41:44 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c9d4559] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7857a6e7]
2021-04-18 11:41:45 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.Likes
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-18 11:41:45 DEBUG EntityBinder:430 - Import with entity name Likes
2021-04-18 11:41:45 DEBUG EntityBinder:873 - Bind entity base.model.Likes on table PostLikes
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PostLikes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Likes] is safe
2021-04-18 11:41:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Likes
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Likes:likeId]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property likeId
2021-04-18 11:41:45 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PostLikes), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Likes:postId]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property postId
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PostLikes), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Likes:userId]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property userId
2021-04-18 11:41:45 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.Photos
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-18 11:41:45 DEBUG EntityBinder:430 - Import with entity name Photos
2021-04-18 11:41:45 DEBUG EntityBinder:873 - Bind entity base.model.Photos on table Photos
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Photos] is safe
2021-04-18 11:41:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Photos
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property photoId with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Photos:photoId]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for photoId
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property photoId
2021-04-18 11:41:45 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(photo_id)]), photoId, identity, , ...)
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=imageData, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property imageData with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Photos:imageData]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for imageData
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property imageData
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=myPost, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property myPost
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photos), mappingColumn=photobyte, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property photoString with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Photos:photoString]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for photoString
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property photoString
2021-04-18 11:41:45 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.Post
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-18 11:41:45 DEBUG EntityBinder:430 - Import with entity name Post
2021-04-18 11:41:45 DEBUG EntityBinder:873 - Bind entity base.model.Post on table User_Post
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Post] is safe
2021-04-18 11:41:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Post
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:postId]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property postId
2021-04-18 11:41:45 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=post_description, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:description]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property description
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=media, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property media with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:media]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for media
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property media
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='myPost'}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=photoList, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=photoList_KEY, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='photoList_KEY', referencedColumn='null', mappedBy='null'}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='myPost'}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='myPost'}
2021-04-18 11:41:45 DEBUG CollectionBinder:449 - Collection role: base.model.Post.photoList
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property photoList
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=post_submitted, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property submitted with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.Post:submitted]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for submitted
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property submitted
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=userId, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property userId
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User_Post), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-04-18 11:41:45 DEBUG CollectionBinder:449 - Collection role: base.model.Post.users
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property users
2021-04-18 11:41:45 DEBUG AnnotationBinder:560 - Binding entity from annotated class: base.model.User
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-18 11:41:45 DEBUG EntityBinder:430 - Import with entity name User
2021-04-18 11:41:45 DEBUG EntityBinder:873 - Bind entity base.model.User on table Users
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.User] is safe
2021-04-18 11:41:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.User
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:userId]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property userId
2021-04-18 11:41:45 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_avatar, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property avatar with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:avatar]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for avatar
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property avatar
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_email, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:email]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property email
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_fname, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:fname]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property fname
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_lname, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:lname]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property lname
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=loggedin, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property loginStatus with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:loginStatus]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for loginStatus
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property loginStatus
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:password]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property password
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=postLikes_KEY, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='postLikes_KEY', referencedColumn='null', mappedBy='null'}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='users'}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='users'}
2021-04-18 11:41:45 DEBUG CollectionBinder:449 - Collection role: base.model.User.postLikes
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property postLikes
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=postList, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=postList_KEY, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='postList_KEY', referencedColumn='null', mappedBy='null'}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
2021-04-18 11:41:45 DEBUG CollectionBinder:449 - Collection role: base.model.User.postList
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property postList
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userDescription with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:userDescription]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for userDescription
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property userDescription
2021-04-18 11:41:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_username, insertable=true, updatable=true, unique=false}
2021-04-18 11:41:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-04-18 11:41:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [base.model.User:username]
2021-04-18 11:41:45 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-04-18 11:41:45 DEBUG PropertyBinder:266 - Building property username
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for photoId
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for imageData
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for photoString
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for media
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for submitted
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for avatar
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for loginStatus
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userDescription
2021-04-18 11:41:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-04-18 11:41:45 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [postlikes]
2021-04-18 11:41:45 DEBUG PrimaryKey:35 - Forcing column [photo_id] to be non-null as it is part of the primary key for table [photos]
2021-04-18 11:41:45 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [user_post]
2021-04-18 11:41:45 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-04-18 11:41:45 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.Post.users
2021-04-18 11:41:45 DEBUG CollectionBinder:1338 - Binding as ManyToMany: base.model.Post.users
2021-04-18 11:41:45 DEBUG CollectionSecondPass:67 - Mapped collection key: post_id, element: user_id
2021-04-18 11:41:45 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.Post.photoList
2021-04-18 11:41:45 DEBUG CollectionBinder:903 - Binding a OneToMany: base.model.Post.photoList through a foreign key
2021-04-18 11:41:45 DEBUG CollectionBinder:941 - Mapping collection: base.model.Post.photoList -> Photos
2021-04-18 11:41:45 DEBUG TableBinder:554 - Retrieving property base.model.Photos.myPost
2021-04-18 11:41:45 DEBUG CollectionSecondPass:67 - Mapped collection key: post_id, one-to-many: base.model.Photos
2021-04-18 11:41:45 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.User.postLikes
2021-04-18 11:41:45 DEBUG CollectionBinder:1338 - Binding as ManyToMany: base.model.User.postLikes
2021-04-18 11:41:45 DEBUG TableBinder:554 - Retrieving property base.model.Post.users
2021-04-18 11:41:45 DEBUG CollectionSecondPass:67 - Mapped collection key: user_id, element: post_id
2021-04-18 11:41:45 DEBUG CollectionSecondPass:50 - Second pass for collection: base.model.User.postList
2021-04-18 11:41:45 DEBUG CollectionBinder:903 - Binding a OneToMany: base.model.User.postList through a foreign key
2021-04-18 11:41:45 DEBUG CollectionBinder:941 - Mapping collection: base.model.User.postList -> User_Post
2021-04-18 11:41:45 DEBUG TableBinder:554 - Retrieving property base.model.Post.userId
2021-04-18 11:41:45 DEBUG CollectionSecondPass:67 - Mapped collection key: user_id, one-to-many: base.model.Post
2021-04-18 11:41:45 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-18 11:41:45 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-18 11:41:45 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-18 11:41:45 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-18 11:41:45 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-18 11:41:45 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-18 11:41:45 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.Post
2021-04-18 11:41:45 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: base.model.User
2021-04-18 11:41:45 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-18 11:41:45 DEBUG Settings:68 - SessionFactory name : null
2021-04-18 11:41:45 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-18 11:41:45 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-18 11:41:45 DEBUG Settings:72 - Statistics: disabled
2021-04-18 11:41:45 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-18 11:41:45 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-18 11:41:45 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-18 11:41:45 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-18 11:41:45 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-18 11:41:45 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-18 11:41:45 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-18 11:41:45 DEBUG Settings:82 - Default null ordering: NONE
2021-04-18 11:41:45 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-18 11:41:45 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-18 11:41:45 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-18 11:41:45 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-18 11:41:45 DEBUG Settings:90 - Query language substitutions: {}
2021-04-18 11:41:45 DEBUG Settings:91 - Named query checking : enabled
2021-04-18 11:41:45 DEBUG Settings:93 - Second-level cache: disabled
2021-04-18 11:41:45 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-18 11:41:45 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-18 11:41:45 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-18 11:41:45 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-18 11:41:45 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-18 11:41:45 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-18 11:41:45 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-18 11:41:45 DEBUG Settings:102 - JDBC batch size: 15
2021-04-18 11:41:45 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-18 11:41:45 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-18 11:41:45 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-18 11:41:45 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-18 11:41:45 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-18 11:41:45 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-04-18 11:41:45 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-18 11:41:45 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-18 11:41:45 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-18 11:41:45 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-18 11:41:45 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-18 11:41:45 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-18 11:41:45 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=false, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7fc55665, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect, java.class.path=C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\bin\bootstrap.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\bin\commons-daemon.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\bin\tomcat-juli.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\annotations-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-ant.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-ha.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-ssi.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-storeconfig.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina-tribes.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\catalina.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\ecj-4.18.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\el-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jasper-el.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jasper.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jaspic-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\jsp-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\servlet-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-api.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-coyote.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-dbcp.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-cs.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-de.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-es.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-fr.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-ja.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-ko.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-pt-BR.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-ru.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-i18n-zh-CN.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-jdbc.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-jni.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-util-scan.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-util.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\tomcat-websocket.jar;C:\Users\frost\Documents\apache\apache-tomcat-9.0.45\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=true, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_281\jre\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, sun.cpu.endian=little, user.home=C:\Users\frost, user.language=en, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.home=C:\Program Files\Java\jdk1.8.0_281\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_281\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_281\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_281\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, server.loader=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_281-b09, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=frost, path.separator=;, common.loader="C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib","C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib/*.jar","C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib","C:\Users\frost\.SmartTomcat\social_media\social_media.main/lib/*.jar", os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_281\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[ParallelWebappClassLoader
  context: social
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@2530c12
], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\frost\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\frost\.SmartTomcat\social_media\social_media.main, java.version=1.8.0_281, java.util.concurrent.ForkJoinPool.common.threadFactory=org.apache.catalina.startup.SafeForkJoinWorkerThreadFactory, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\frost\.SmartTomcat\social_media\social_media.main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\frost\.SmartTomcat\social_media\social_media.main, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6058089c, java.library.path=C:\Program Files\Java\jdk1.8.0_281\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Users\frost\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\frost\AppData\Local\Programs\Python\Python38-32\;C:\Users\frost\AppData\Local\Microsoft\WindowsApps;C:\Users\frost\AppData\Local\GitHubDesktop\bin;C:\Users\frost\Documents\Misc\ffmpeg-20200628-4cfcfb3-win64-static\bin;;C:\Users\frost\AppData\Local\Microsoft\WindowsApps;C:\Users\frost\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\frost\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.281-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@5bd3cfd2, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_281\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=52.0}
2021-04-18 11:41:46 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-18 11:41:46 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-18 11:41:46 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c9d4559] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c636178]
2021-04-18 11:41:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Photos] is safe
2021-04-18 11:41:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Photos
2021-04-18 11:41:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.User] is safe
2021-04-18 11:41:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.User
2021-04-18 11:41:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Likes] is safe
2021-04-18 11:41:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Likes
2021-04-18 11:41:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [base.model.Post] is safe
2021-04-18 11:41:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : base.model.Post
2021-04-18 11:41:46 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.Post.users
2021-04-18 11:41:46 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into PostLikes (post_id, user_id) values (?, ?)
2021-04-18 11:41:46 DEBUG AbstractCollectionPersister:697 -  Row update: update PostLikes set user_id=? where post_id=? and user_id=?
2021-04-18 11:41:46 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from PostLikes where post_id=? and user_id=?
2021-04-18 11:41:46 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from PostLikes where post_id=?
2021-04-18 11:41:46 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.User.postLikes
2021-04-18 11:41:46 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into PostLikes (user_id, post_id) values (?, ?)
2021-04-18 11:41:46 DEBUG AbstractCollectionPersister:697 -  Row update: update PostLikes set post_id=? where user_id=? and post_id=?
2021-04-18 11:41:46 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from PostLikes where user_id=? and post_id=?
2021-04-18 11:41:46 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from PostLikes where user_id=?
2021-04-18 11:41:47 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.User.postList
2021-04-18 11:41:47 DEBUG AbstractCollectionPersister:694 -  Row insert: update User_Post set user_id=? where post_id=?
2021-04-18 11:41:47 DEBUG AbstractCollectionPersister:697 -  Row update: update User_Post set  where post_id=?
2021-04-18 11:41:47 DEBUG AbstractCollectionPersister:700 -  Row delete: update User_Post set user_id=null where user_id=? and post_id=?
2021-04-18 11:41:47 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update User_Post set user_id=null where user_id=?
2021-04-18 11:41:47 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: base.model.Post.photoList
2021-04-18 11:41:47 DEBUG AbstractCollectionPersister:694 -  Row insert: update Photos set post_id=? where photo_id=?
2021-04-18 11:41:47 DEBUG AbstractCollectionPersister:697 -  Row update: update Photos set  where photo_id=?
2021-04-18 11:41:47 DEBUG AbstractCollectionPersister:700 -  Row delete: update Photos set post_id=null where post_id=? and photo_id=?
2021-04-18 11:41:47 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update Photos set post_id=null where post_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.Photos
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3923 -  Version select: select photo_id from Photos where photo_id =?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select photos_.photo_id, photos_.imageData as imagedat2_0_, photos_.post_id as post_id4_0_, photos_.photobyte as photobyt3_0_ from Photos photos_ where photos_.photo_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Photos (imageData, post_id, photobyte, photo_id) values (?, ?, ?, ?)
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Update 0: update Photos set imageData=?, post_id=?, photobyte=? where photo_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Photos where photo_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into Photos (imageData, post_id, photobyte) values (?, ?, ?)
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d30d3ab]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : imageData
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@361516c9]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.description
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.media
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.photoList
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : myPost.photoList
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.submitted
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@375eead2]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.avatar
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.email
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.fname
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.lname
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.loginStatus
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.password
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.postLikes
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ef940d6]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13ca2496]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.postList
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : myPost.userId.postList
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.userDescription
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.userId.username
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost.users
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2138dd36]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6394a313]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoString
2021-04-18 11:41:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-18 11:41:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-18 11:41:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.Photos)
    - Returns
       - EntityReturnImpl(entity=base.model.Photos, querySpaceUid=<gen:0>, path=base.model.Photos)
          - EntityAttributeFetchImpl(entity=base.model.Post, querySpaceUid=<gen:1>, path=base.model.Photos.myPost)
             - EntityAttributeFetchImpl(entity=base.model.User, querySpaceUid=<gen:2>, path=base.model.Photos.myPost.userId)
                - CollectionAttributeFetchImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:3>, path=base.model.Photos.myPost.userId.postLikes)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:4>, path=base.model.Photos.myPost.userId.postLikes.<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:5>, path=base.model.Photos.myPost.users)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:6>, path=base.model.Photos.myPost.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.Photos)
          - SQL table alias mapping - photos0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(myPost)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(userId)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=base.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}

2021-04-18 11:41:47 DEBUG EntityLoader:129 - Static select for entity base.model.Photos [NONE]: select photos0_.photo_id as photo_id1_0_0_, photos0_.imageData as imagedat2_0_0_, photos0_.post_id as post_id4_0_0_, photos0_.photobyte as photobyt3_0_0_, post1_.post_id as post_id1_2_1_, post1_.post_description as post_des2_2_1_, post1_.media as media3_2_1_, post1_.post_submitted as post_sub4_2_1_, post1_.user_id as user_id5_2_1_, user2_.user_id as user_id1_3_2_, user2_.user_avatar as user_ava2_3_2_, user2_.user_email as user_ema3_3_2_, user2_.user_fname as user_fna4_3_2_, user2_.user_lname as user_lna5_3_2_, user2_.loggedin as loggedin6_3_2_, user2_.user_password as user_pas7_3_2_, user2_.description as descript8_3_2_, user2_.user_username as user_use9_3_2_ from Photos photos0_ left outer join User_Post post1_ on photos0_.post_id=post1_.post_id left outer join Users user2_ on post1_.user_id=user2_.user_id where photos0_.photo_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.User
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3923 -  Version select: select user_id from Users where user_id =?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select user_.user_id, user_.user_avatar as user_ava2_3_, user_.user_email as user_ema3_3_, user_.user_fname as user_fna4_3_, user_.user_lname as user_lna5_3_, user_.loggedin as loggedin6_3_, user_.user_password as user_pas7_3_, user_.description as descript8_3_, user_.user_username as user_use9_3_ from Users user_ where user_.user_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (user_avatar, user_email, user_fname, user_lname, loggedin, user_password, description, user_username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set user_avatar=?, user_email=?, user_fname=?, user_lname=?, loggedin=?, user_password=?, description=?, user_username=? where user_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into Users (user_avatar, user_email, user_fname, user_lname, loggedin, user_password, description, user_username) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10650eb3]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : avatar
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : loginStatus
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postLikes
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e00725]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34fbfb3c]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c537b86]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cdeaddf]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.description
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.media
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e649add]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f308da5]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList.imageData
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList.myPost
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : postList.photoList.myPost
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.photoList.photoString
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.submitted
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.userId
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : postList.userId
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList.users
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d445f44]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@656de7b2]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userDescription
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-04-18 11:41:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-18 11:41:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-18 11:41:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.User)
    - Returns
       - EntityReturnImpl(entity=base.model.User, querySpaceUid=<gen:0>, path=base.model.User)
          - CollectionAttributeFetchImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:1>, path=base.model.User.postLikes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:2>, path=base.model.User.postLikes.<elements>)
          - CollectionAttributeFetchImpl(collection=base.model.User.postList, querySpaceUid=<gen:3>, path=base.model.User.postList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:4>, path=base.model.User.postList.<elements>)
                - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:5>, path=base.model.User.postList.<elements>.photoList)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:6>, path=base.model.User.postList.<elements>.photoList.<elements>)
                - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:7>, path=base.model.User.postList.<elements>.users)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:8>, path=base.model.User.postList.<elements>.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(postList)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=base.model.User.postList)
                - SQL table alias mapping - postlist1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - post_id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=base.model.Post)
                      - SQL table alias mapping - postlist1_
                      - alias suffix - 2_
                      - suffixed key columns - {post_id1_2_2_}
                      - JOIN (JoinDefinedByMetadata(photoList)) : <gen:4> -> <gen:5>
                         - CollectionQuerySpaceImpl(uid=<gen:5>, collection=base.model.Post.photoList)
                            - SQL table alias mapping - photolist2_
                            - alias suffix - 3_
                            - suffixed key columns - {post_id4_0_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - photo_id1_0_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                               - EntityQuerySpaceImpl(uid=<gen:6>, entity=base.model.Photos)
                                  - SQL table alias mapping - photolist2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {photo_id1_0_4_}

2021-04-18 11:41:47 DEBUG EntityLoader:129 - Static select for entity base.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.user_avatar as user_ava2_3_0_, user0_.user_email as user_ema3_3_0_, user0_.user_fname as user_fna4_3_0_, user0_.user_lname as user_lna5_3_0_, user0_.loggedin as loggedin6_3_0_, user0_.user_password as user_pas7_3_0_, user0_.description as descript8_3_0_, user0_.user_username as user_use9_3_0_, postlist1_.user_id as user_id5_2_1_, postlist1_.post_id as post_id1_2_1_, postlist1_.post_id as post_id1_2_2_, postlist1_.post_description as post_des2_2_2_, postlist1_.media as media3_2_2_, postlist1_.post_submitted as post_sub4_2_2_, postlist1_.user_id as user_id5_2_2_, photolist2_.post_id as post_id4_0_3_, photolist2_.photo_id as photo_id1_0_3_, photolist2_.photo_id as photo_id1_0_4_, photolist2_.imageData as imagedat2_0_4_, photolist2_.post_id as post_id4_0_4_, photolist2_.photobyte as photobyt3_0_4_ from Users user0_ left outer join User_Post postlist1_ on user0_.user_id=postlist1_.user_id left outer join Photos photolist2_ on postlist1_.post_id=photolist2_.post_id where user0_.user_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.Likes
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3923 -  Version select: select like_id from PostLikes where like_id =?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select likes_.like_id, likes_.post_id as post_id2_1_, likes_.user_id as user_id3_1_ from PostLikes likes_ where likes_.like_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PostLikes (post_id, user_id, like_id) values (?, ?, ?)
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Update 0: update PostLikes set post_id=?, user_id=? where like_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PostLikes where like_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into PostLikes (post_id, user_id) values (?, ?)
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66748783]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postId
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-18 11:41:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-18 11:41:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-18 11:41:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.Likes)
    - Returns
       - EntityReturnImpl(entity=base.model.Likes, querySpaceUid=<gen:0>, path=base.model.Likes)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.Likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_1_0_}

2021-04-18 11:41:47 DEBUG EntityLoader:129 - Static select for entity base.model.Likes [NONE]: select likes0_.like_id as like_id1_1_0_, likes0_.post_id as post_id2_1_0_, likes0_.user_id as user_id3_1_0_ from PostLikes likes0_ where likes0_.like_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: base.model.Post
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3923 -  Version select: select post_id from User_Post where post_id =?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select post_.post_id, post_.post_description as post_des2_2_, post_.media as media3_2_, post_.post_submitted as post_sub4_2_, post_.user_id as user_id5_2_ from User_Post post_ where post_.post_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into User_Post (post_description, media, post_submitted, user_id, post_id) values (?, ?, ?, ?, ?)
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Update 0: update User_Post set post_description=?, media=?, post_submitted=?, user_id=? where post_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from User_Post where post_id=?
2021-04-18 11:41:47 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into User_Post (post_description, media, post_submitted, user_id) values (?, ?, ?, ?)
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d17f139]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : media
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10700876]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f2cd99d]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList.imageData
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList.myPost
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : photoList.myPost
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList.photoString
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b4d864]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.avatar
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.email
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.fname
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.lname
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.loginStatus
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.password
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postLikes
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ee8903e]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d58f0f5]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postList
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId.postList
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.userDescription
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.username
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@627078c2]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a028894]
2021-04-18 11:41:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-18 11:41:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-18 11:41:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=base.model.Post)
    - Returns
       - EntityReturnImpl(entity=base.model.Post, querySpaceUid=<gen:0>, path=base.model.Post)
          - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:1>, path=base.model.Post.photoList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:2>, path=base.model.Post.photoList.<elements>)
          - EntityAttributeFetchImpl(entity=base.model.User, querySpaceUid=<gen:3>, path=base.model.Post.userId)
             - CollectionAttributeFetchImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:4>, path=base.model.Post.userId.postLikes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:5>, path=base.model.Post.userId.postLikes.<elements>)
          - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:6>, path=base.model.Post.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:7>, path=base.model.Post.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=base.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(photoList)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=base.model.Post.photoList)
                - SQL table alias mapping - photolist1_
                - alias suffix - 1_
                - suffixed key columns - {post_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - photo_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=base.model.Photos)
                      - SQL table alias mapping - photolist1_
                      - alias suffix - 2_
                      - suffixed key columns - {photo_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(userId)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=base.model.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-04-18 11:41:47 DEBUG EntityLoader:129 - Static select for entity base.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.post_description as post_des2_2_0_, post0_.media as media3_2_0_, post0_.post_submitted as post_sub4_2_0_, post0_.user_id as user_id5_2_0_, photolist1_.post_id as post_id4_0_1_, photolist1_.photo_id as photo_id1_0_1_, photolist1_.photo_id as photo_id1_0_2_, photolist1_.imageData as imagedat2_0_2_, photolist1_.post_id as post_id4_0_2_, photolist1_.photobyte as photobyt3_0_2_, user2_.user_id as user_id1_3_3_, user2_.user_avatar as user_ava2_3_3_, user2_.user_email as user_ema3_3_3_, user2_.user_fname as user_fna4_3_3_, user2_.user_lname as user_lna5_3_3_, user2_.loggedin as loggedin6_3_3_, user2_.user_password as user_pas7_3_3_, user2_.description as descript8_3_3_, user2_.user_username as user_use9_3_3_ from User_Post post0_ left outer join Photos photolist1_ on post0_.post_id=photolist1_.post_id left outer join Users user2_ on post0_.user_id=user2_.user_id where post0_.post_id=?
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48ae046f]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6982de29]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : avatar
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : loginStatus
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postLikes
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : postLikes
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postList
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@286d2ed5]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57e1ce67]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userDescription
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-04-18 11:41:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-18 11:41:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-18 11:41:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.Post.users)
    - Returns
       - CollectionReturnImpl(collection=base.model.Post.users, querySpaceUid=<gen:0>, path=[base.model.Post.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:1>, path=[base.model.Post.users].<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.User.postList, querySpaceUid=<gen:2>, path=[base.model.Post.users].<elements>.postList)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:3>, path=[base.model.Post.users].<elements>.postList.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.Post.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {post_id2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-04-18 11:41:47 DEBUG CollectionLoader:83 - Static select for collection base.model.Post.users: select users0_.post_id as post_id2_1_0_, users0_.user_id as user_id3_1_0_, user1_.user_id as user_id1_3_1_, user1_.user_avatar as user_ava2_3_1_, user1_.user_email as user_ema3_3_1_, user1_.user_fname as user_fna4_3_1_, user1_.user_lname as user_lna5_3_1_, user1_.loggedin as loggedin6_3_1_, user1_.user_password as user_pas7_3_1_, user1_.description as descript8_3_1_, user1_.user_username as user_use9_3_1_ from PostLikes users0_ inner join Users user1_ on users0_.user_id=user1_.user_id where users0_.post_id=?
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d918b2d]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c7e463b]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : media
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1749aa71]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79e8693d]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d8fee2]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.avatar
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.email
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.fname
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.lname
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.loginStatus
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.password
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postLikes
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId.postLikes
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.postList
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId.postList
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.userDescription
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId.username
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : users
2021-04-18 11:41:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-18 11:41:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-18 11:41:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.User.postLikes)
    - Returns
       - CollectionReturnImpl(collection=base.model.User.postLikes, querySpaceUid=<gen:0>, path=[base.model.User.postLikes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:1>, path=[base.model.User.postLikes].<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:2>, path=[base.model.User.postLikes].<elements>.photoList)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:3>, path=[base.model.User.postLikes].<elements>.photoList.<elements>)
             - EntityAttributeFetchImpl(entity=base.model.User, querySpaceUid=<gen:4>, path=[base.model.User.postLikes].<elements>.userId)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.User.postLikes)
          - SQL table alias mapping - postlikes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(userId)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=base.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}

2021-04-18 11:41:47 DEBUG CollectionLoader:83 - Static select for collection base.model.User.postLikes: select postlikes0_.user_id as user_id3_1_0_, postlikes0_.post_id as post_id2_1_0_, post1_.post_id as post_id1_2_1_, post1_.post_description as post_des2_2_1_, post1_.media as media3_2_1_, post1_.post_submitted as post_sub4_2_1_, post1_.user_id as user_id5_2_1_, user2_.user_id as user_id1_3_2_, user2_.user_avatar as user_ava2_3_2_, user2_.user_email as user_ema3_3_2_, user2_.user_fname as user_fna4_3_2_, user2_.user_lname as user_lna5_3_2_, user2_.loggedin as loggedin6_3_2_, user2_.user_password as user_pas7_3_2_, user2_.description as descript8_3_2_, user2_.user_username as user_use9_3_2_ from PostLikes postlikes0_ inner join User_Post post1_ on postlikes0_.post_id=post1_.post_id left outer join Users user2_ on post1_.user_id=user2_.user_id where postlikes0_.user_id=?
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cd1642c]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464a5b0a]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : media
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoList
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ea90765]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aaf9bb1]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userId
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bae36d1]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@556d7c74]
2021-04-18 11:41:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-18 11:41:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-18 11:41:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.User.postList)
    - Returns
       - CollectionReturnImpl(collection=base.model.User.postList, querySpaceUid=<gen:0>, path=[base.model.User.postList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Post, querySpaceUid=<gen:1>, path=[base.model.User.postList].<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:2>, path=[base.model.User.postList].<elements>.photoList)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:3>, path=[base.model.User.postList].<elements>.photoList.<elements>)
             - CollectionAttributeFetchImpl(collection=base.model.Post.users, querySpaceUid=<gen:4>, path=[base.model.User.postList].<elements>.users)
                - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.User, querySpaceUid=<gen:5>, path=[base.model.User.postList].<elements>.users.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.User.postList)
          - SQL table alias mapping - postlist0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Post)
                - SQL table alias mapping - postlist0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}

2021-04-18 11:41:47 DEBUG CollectionLoader:83 - Static select for collection base.model.User.postList: select postlist0_.user_id as user_id5_2_0_, postlist0_.post_id as post_id1_2_0_, postlist0_.post_id as post_id1_2_1_, postlist0_.post_description as post_des2_2_1_, postlist0_.media as media3_2_1_, postlist0_.post_submitted as post_sub4_2_1_, postlist0_.user_id as user_id5_2_1_ from User_Post postlist0_ where postlist0_.user_id=?
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fbf0488]
2021-04-18 11:41:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@418f49d7]
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : imageData
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : myPost
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : myPost
2021-04-18 11:41:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : photoString
2021-04-18 11:41:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-18 11:41:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-18 11:41:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=base.model.Post.photoList)
    - Returns
       - CollectionReturnImpl(collection=base.model.Post.photoList, querySpaceUid=<gen:0>, path=[base.model.Post.photoList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=base.model.Photos, querySpaceUid=<gen:1>, path=[base.model.Post.photoList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=base.model.Post.photoList)
          - SQL table alias mapping - photolist0_
          - alias suffix - 0_
          - suffixed key columns - {post_id4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - photo_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=base.model.Photos)
                - SQL table alias mapping - photolist0_
                - alias suffix - 1_
                - suffixed key columns - {photo_id1_0_1_}

2021-04-18 11:41:47 DEBUG CollectionLoader:83 - Static select for collection base.model.Post.photoList: select photolist0_.post_id as post_id4_0_0_, photolist0_.photo_id as photo_id1_0_0_, photolist0_.photo_id as photo_id1_0_1_, photolist0_.imageData as imagedat2_0_1_, photolist0_.post_id as post_id4_0_1_, photolist0_.photobyte as photobyt3_0_1_ from Photos photolist0_ where photolist0_.post_id=?
2021-04-18 11:41:47 DEBUG SQL:144 - alter table Photos drop constraint FKpe0df8jfc7gusfs58n4pavnfj
2021-04-18 11:41:48 DEBUG SQL:144 - alter table PostLikes drop constraint FKqr2tesgyxdvumu7w99ey582b8
2021-04-18 11:41:48 DEBUG SQL:144 - alter table PostLikes drop constraint FKg7gnqlsmheo3bw8hjnkxj66ng
2021-04-18 11:41:48 DEBUG SQL:144 - alter table User_Post drop constraint FK2cw566aoa9rahg1lft0s2jxqd
2021-04-18 11:41:48 DEBUG SQL:144 - drop table if exists Photos cascade
2021-04-18 11:41:48 DEBUG SQL:144 - drop table if exists PostLikes cascade
2021-04-18 11:41:48 DEBUG SQL:144 - drop table if exists User_Post cascade
2021-04-18 11:41:48 DEBUG SQL:144 - drop table if exists Users cascade
2021-04-18 11:41:49 DEBUG SQL:144 - create table Photos (photo_id  serial not null, imageData bytea, photobyte varchar(255), post_id int4, primary key (photo_id))
2021-04-18 11:41:49 DEBUG SQL:144 - create table PostLikes (like_id  serial not null, post_id int4, user_id int4, primary key (like_id))
2021-04-18 11:41:49 DEBUG SQL:144 - create table User_Post (post_id  serial not null, post_description varchar(255), media varchar(255), post_submitted timestamp, user_id int4, primary key (post_id))
2021-04-18 11:41:49 DEBUG SQL:144 - create table Users (user_id  serial not null, user_avatar varchar(255) not null, user_email varchar(255) not null, user_fname varchar(255) not null, user_lname varchar(255) not null, loggedin boolean, user_password varchar(255) not null, description varchar(255), user_username varchar(255) not null, primary key (user_id))
2021-04-18 11:41:50 DEBUG SQL:144 - alter table Photos add constraint FKpe0df8jfc7gusfs58n4pavnfj foreign key (post_id) references User_Post
2021-04-18 11:41:50 DEBUG SQL:144 - alter table PostLikes add constraint FKqr2tesgyxdvumu7w99ey582b8 foreign key (user_id) references Users
2021-04-18 11:41:50 DEBUG SQL:144 - alter table PostLikes add constraint FKg7gnqlsmheo3bw8hjnkxj66ng foreign key (post_id) references User_Post
2021-04-18 11:41:50 DEBUG SQL:144 - alter table User_Post add constraint FK2cw566aoa9rahg1lft0s2jxqd foreign key (user_id) references Users
2021-04-18 11:41:50 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-18 11:41:50 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-18 11:41:50 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-18 11:41:50 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-18 11:41:50 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-18 11:41:50 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-18 11:41:50 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d49966c
2021-04-18 11:41:50 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: aedb681a-32f3-4f5c-90c8-b37882211385 (<unnamed>)
2021-04-18 11:41:50 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-18 11:41:50 INFO  LikesDaoImpl:52 - LikesDaoImpl constructor with sesFact req called
2021-04-18 11:41:50 INFO  LikesDaoImpl:66 - sesFact set called via setter
2021-04-18 11:41:50 INFO  LikesController:52 - likes controller likesDao constructor has been referenced
2021-04-18 11:41:50 INFO  LikesController:66 - Setting likesDao in setter
2021-04-18 11:41:50 INFO  PhotoDaoImpl:148 - Constructor called for PhotoDaoImpl with sesFact req
2021-04-18 11:41:50 INFO  PhotoDaoImpl:159 - Setter called for sesFact
2021-04-18 11:41:50 INFO  PhotoService:34 - In no arg constructor for PhotoService
2021-04-18 11:41:50 INFO  PhotoController:84 - In constructor for PhotoController with reqs photoDao and photoService
2021-04-18 11:41:50 INFO  PhotoController:110 - In setter for photoService
2021-04-18 11:41:50 INFO  PhotoController:99 - In setter for photoDao
2021-04-18 11:41:50 INFO  PostDaoImpl:56 - Called no arg constructor for PostDaoImpl
2021-04-18 11:41:50 INFO  PostDaoImpl:75 - Setter called for sesFact
2021-04-18 11:41:50 INFO  PostController:75 - In postDao constructor for PostController
2021-04-18 11:41:50 INFO  UserDaoImpl:99 - In no arg constructor for UserDaoImpl
2021-04-18 11:41:50 INFO  UserDaoImpl:114 - Setter called for sesFact
2021-04-18 11:41:50 INFO  SessionController:93 - In constructor for SessionController with reqs userDao and uServ
2021-04-18 11:41:50 INFO  SessionController:110 - Setting userDao via setter
2021-04-18 11:41:50 INFO  UserController:99 - In Usercontroller constructor with UserDao/UserService reqs
2021-04-18 11:41:50 INFO  UserController:119 - In setter for userDao
2021-04-18 11:41:52 INFO  SocketHandler:19 - registerWebsocketHandlers method called
2021-04-18 11:41:52 INFO  SocketHandler:25 - Creating WebSocketHandler bean
